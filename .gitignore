# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files in version control:
#  - .idea/modules.xml
#  - .idea/*.iml
#  - .idea/misc.xml
#  - .idea/vcs.xml
.idea/

# VS Code
.vscode/

# AutoCheckBJMF 特定文件
config.json
*.log
logs/
temp/
cache/

# 安全存储文件
storage.key
secure_data.enc
*.enc

# 浏览器数据库文件（测试时可能创建）
Cookies
cookies.sqlite
*.db

# 临时文件
*.tmp
*.temp
*.bak
*.swp
*.swo
*~

# 操作系统文件
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows 特定
*.bat
*.cmd
desktop.ini

# 测试相关
test_*.json
test_*.log
test_output/
.coverage.*

# 文档构建
docs/_site/
docs/.sass-cache/
docs/.jekyll-cache/
docs/.jekyll-metadata

# 安全报告
bandit-report.json
safety-report.json
security-reports/

# 打包文件
*.zip
*.tar.gz
*.rar
*.7z

# 开发工具
.pytest_cache/
.mypy_cache/
.ruff_cache/

# 本地配置
local_config.json
dev_config.json
.env.local
.env.development

# 用户数据
user_data/
cookies_backup/
config_backup/

# 浏览器驱动
chromedriver*
geckodriver*
msedgedriver*
operadriver*

# 虚拟环境
venv*/
env*/
.conda/

# 编辑器临时文件
*.sublime-project
*.sublime-workspace
.atom/
.brackets.json

# 性能分析
*.prof
*.pstats

# 国际化
*.mo
*.pot

# 文档草稿
draft/
drafts/
*.draft.md

# 备份文件
*.backup
backup/
backups/

# 本地测试数据
test_data/
sample_data/
mock_data/

# 密钥和证书
*.key
*.pem
*.crt
*.p12
*.pfx

# 数据库
*.sqlite
*.sqlite3
*.db

# 缓存目录
.cache/
cache/
__pycache__/

# 临时下载
downloads/
temp_downloads/
