<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AugmentWebviewStateStore">
    <option name="stateMap">
      <map>
        <entry key="CHAT_STATE" value="{&quot;currentConversationId&quot;:&quot;1515f28f-67c3-4ef8-a13f-9f7c299bb384&quot;,&quot;conversations&quot;:{&quot;49884bc9-f590-4fad-a11e-2ba1409de248&quot;:{&quot;id&quot;:&quot;49884bc9-f590-4fad-a11e-2ba1409de248&quot;,&quot;createdAtIso&quot;:&quot;2025-06-17T10:33:27.976Z&quot;,&quot;lastInteractedAtIso&quot;:&quot;2025-06-17T10:33:27.977Z&quot;,&quot;chatHistory&quot;:[],&quot;feedbackStates&quot;:{},&quot;toolUseStates&quot;:{},&quot;draftExchange&quot;:{&quot;request_message&quot;:&quot;&quot;,&quot;rich_text_json_repr&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;}]},&quot;mentioned_items&quot;:[],&quot;status&quot;:&quot;draft&quot;},&quot;requestIds&quot;:[],&quot;isPinned&quot;:false,&quot;isShareable&quot;:false,&quot;extraData&quot;:{&quot;hasDirtyEdits&quot;:false},&quot;personaType&quot;:0},&quot;1515f28f-67c3-4ef8-a13f-9f7c299bb384&quot;:{&quot;id&quot;:&quot;1515f28f-67c3-4ef8-a13f-9f7c299bb384&quot;,&quot;createdAtIso&quot;:&quot;2025-06-17T10:33:27.982Z&quot;,&quot;lastInteractedAtIso&quot;:&quot;2025-06-17T10:37:40.157Z&quot;,&quot;chatHistory&quot;:[{&quot;request_id&quot;:&quot;ae1036e2-cadc-4545-a586-b5afd1df4eb4&quot;,&quot;uuid&quot;:&quot;b8b5c251-89ad-45c1-a09e-8ed796176410&quot;,&quot;chatItemType&quot;:&quot;agentic-checkpoint-delimiter&quot;,&quot;status&quot;:&quot;success&quot;,&quot;fromTimestamp&quot;:0,&quot;toTimestamp&quot;:1750156407982,&quot;seen_state&quot;:&quot;seen&quot;},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;3dba4484-433f-4db4-9dfb-cb0fc0b617b4&quot;,&quot;request_message&quot;:&quot;请详细分析当前代码库中的执行流程，特别关注以下几个方面：\n\n1. **代码执行流程分析**：\n   - 逐步解释主要功能模块的执行顺序和逻辑\n   - 识别关键的数据流和控制流\n   - 分析各个组件之间的依赖关系\n\n2. **Cookie获取机制改进**：\n   - 分析当前Cookie获取方式的局限性\n   - 针对Windows环境，研究并提出以下改进方案：\n     a) 自动化Cookie获取的技术方案（如使用selenium、playwright等）\n     b) 从浏览器自动提取Cookie的方法（Chrome、Edge、Firefox等）\n     c) 首次运行时的自动化登录流程设计\n\n3. **Cookie安全存储方案**：\n   - 评估当前Cookie存储的安全性\n   - 提出加密存储方案（如使用Windows DPAPI、keyring库等）\n   - 设计Cookie有效性检查和自动刷新机制\n\n4. **具体实现建议**：\n   - 提供可行的代码实现方案\n   - 考虑用户体验和安全性的平衡\n   - 给出Windows环境下的最佳实践建议\n\n请基于当前代码库的实际情况，提供具体可执行的改进方案和代码示例。&quot;,&quot;rich_text_json_repr&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;请详细分析当前代码库中的执行流程，特别关注以下几个方面：&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;1. **代码执行流程分析**：&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;   - 逐步解释主要功能模块的执行顺序和逻辑&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;   - 识别关键的数据流和控制流&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;   - 分析各个组件之间的依赖关系&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;2. **Cookie获取机制改进**：&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;   - 分析当前Cookie获取方式的局限性&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;   - 针对Windows环境，研究并提出以下改进方案：&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;     a) 自动化Cookie获取的技术方案（如使用selenium、playwright等）&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;     b) 从浏览器自动提取Cookie的方法（Chrome、Edge、Firefox等）&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;     c) 首次运行时的自动化登录流程设计&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;3. **Cookie安全存储方案**：&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;   - 评估当前Cookie存储的安全性&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;   - 提出加密存储方案（如使用Windows DPAPI、keyring库等）&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;   - 设计Cookie有效性检查和自动刷新机制&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;4. **具体实现建议**：&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;   - 提供可行的代码实现方案&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;   - 考虑用户体验和安全性的平衡&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;   - 给出Windows环境下的最佳实践建议&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;hardBreak&quot;},{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;请基于当前代码库的实际情况，提供具体可执行的改进方案和代码示例。&quot;}]}]},&quot;mentioned_items&quot;:[],&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_01KgFd5PCU43G2vyUKPQRfar&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;.\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;我来详细分析当前代码库的执行流程，并针对Cookie获取机制提出改进方案。首先让我了解当前代码库的结构和内容。\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:0,&quot;type&quot;:0,&quot;text_node&quot;:{&quot;content&quot;:&quot;请详细分析当前代码库中的执行流程，特别关注以下几个方面：\n\n1. **代码执行流程分析**：\n   - 逐步解释主要功能模块的执行顺序和逻辑\n   - 识别关键的数据流和控制流\n   - 分析各个组件之间的依赖关系\n\n2. **Cookie获取机制改进**：\n   - 分析当前Cookie获取方式的局限性\n   - 针对Windows环境，研究并提出以下改进方案：\n     a) 自动化Cookie获取的技术方案（如使用selenium、playwright等）\n     b) 从浏览器自动提取Cookie的方法（Chrome、Edge、Firefox等）\n     c) 首次运行时的自动化登录流程设计\n\n3. **Cookie安全存储方案**：\n   - 评估当前Cookie存储的安全性\n   - 提出加密存储方案（如使用Windows DPAPI、keyring库等）\n   - 设计Cookie有效性检查和自动刷新机制\n\n4. **具体实现建议**：\n   - 提供可行的代码实现方案\n   - 考虑用户体验和安全性的平衡\n   - 给出Windows环境下的最佳实践建议\n\n请基于当前代码库的实际情况，提供具体可执行的改进方案和代码示例。&quot;}},{&quot;id&quot;:1,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;C:/Users/MSI-NB/PycharmProjects/AutoCheckBJMF&quot;,&quot;folderRoot&quot;:&quot;C:/Users/MSI-NB/PycharmProjects/AutoCheckBJMF&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-17T10:36:55.755Z&quot;,&quot;response_text&quot;:&quot;我来详细分析当前代码库的执行流程，并针对Cookie获取机制提出改进方案。首先让我了解当前代码库的结构和内容。\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;af5f2108-8196-4333-9085-89bcdede7edd&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_014cmGfr6iaidfQdLE1zCkL4&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;main.py\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in ., excluding hidden items:\n./LICENSE\n./README.md\n./main.py\n./main.spec\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_01KgFd5PCU43G2vyUKPQRfar&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;C:/Users/MSI-NB/PycharmProjects/AutoCheckBJMF&quot;,&quot;folderRoot&quot;:&quot;C:/Users/MSI-NB/PycharmProjects/AutoCheckBJMF&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-17T10:37:00.928Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;be573a09-2519-44a4-8751-c93ab6149e9b&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_01SHXrnG75xqtdRqxrCjczYJ&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;README.md\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;现在让我查看README文件来了解更多项目信息：\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on main.py:\n     1\timport random\n     2\timport requests\n     3\timport re\n     4\timport time\n     5\timport os\n     6\tfrom bs4 import BeautifulSoup\n     7\timport json\n     8\timport schedule\n     9\tfrom datetime import datetime\n    10\timport logging\n    11\t\n    12\t# 获取当前目录\n    13\tcurrent_directory = os.getcwd()\n    14\tfile_name = \&quot;config.json\&quot;\n    15\tfile_path = os.path.join(current_directory, file_name)\n    16\t\n    17\tprint(\&quot;----------提醒----------\&quot;)\n    18\tprint(\&quot;项目地址：https://github.com/JasonYANG170/AutoCheckBJMF\&quot;)\n    19\tprint(\&quot;请查看教程以获取Cookie和班级ID\&quot;)\n    20\tprint(\&quot;config.json文件位置：\&quot;, current_directory)\n    21\t\n    22\t# 检查文件是否存在\n    23\tif not os.path.exists(file_path):\n    24\t    # 定义默认的 JSON 数据\n    25\t    default_config = {\n    26\t        \&quot;class\&quot;: \&quot;\&quot;, # 班级ID\n    27\t        \&quot;lat\&quot;: \&quot;\&quot;, # 纬度\n    28\t        \&quot;lng\&quot;: \&quot;\&quot;, # 经度\n    29\t        \&quot;acc\&quot;: \&quot;\&quot;, # 海拔\n    30\t        \&quot;time\&quot;: 0, # 等待时间（已弃用）\n    31\t        \&quot;cookie\&quot;: \&quot;\&quot;, # 用户令牌\n    32\t        \&quot;scheduletime\&quot;: \&quot;\&quot;, # 定时任务\n    33\t        \&quot;pushplus\&quot;: \&quot;\&quot;, # pushpush推送令牌\n    34\t        \&quot;debug\&quot;: False, # 调试模式\n    35\t        \&quot;configLock\&quot;: False #配置编辑状态，\n    36\t    }\n    37\t    # 文件不存在，创建并写入默认数据\n    38\t    with open(file_path, \&quot;w\&quot;) as file:\n    39\t        json.dump(default_config, file, indent=4)\n    40\t    print(\&quot;----------初始化----------\&quot;)\n    41\t    print(f\&quot;文件 {file_name} 不存在，已创建并填充默认数据。\&quot;)\n    42\t\n    43\t# 读取外部 JSON 文件中的数据\n    44\twith open(file_path, 'r') as file:\n    45\t    json_data = json.load(file)\n    46\t    debug = json_data[\&quot;debug\&quot;]\n    47\t\n    48\t    # 判断是否首次使用或解除配置锁定\n    49\t    if not json_data['configLock']:\n    50\t        print(\&quot;----------基础配置(必填)----------\&quot;)\n    51\t        print(\&quot;☆请通过查看教程抓包获取班级ID\&quot;)\n    52\t        ClassID = input(\&quot;请输入班级ID：\&quot;)\n    53\t        print(\&quot;☆输入的经纬度格式为x.x，请输入至少8位小数用于定位微偏移，不满8位用0替补！\&quot;)\n    54\t        print(\&quot;☆腾讯坐标拾取工具：https://lbs.qq.com/getPoint/\&quot;)\n    55\t        X = input(\&quot;请输入纬度(X)：\&quot;)\n    56\t        Y = input(\&quot;请输入经度(Y)：\&quot;)\n    57\t        ACC = input(\&quot;请输入海拔：\&quot;)\n    58\t        print(\&quot;----------配置Cookie(必填)----------\&quot;)\n    59\t        print(\&quot;请通过查看教程抓包获取Cookie\&quot;)\n    60\t        print(\&quot;教程：https://github.com/JasonYANG170/AutoCheckBJMF/wiki/\&quot;)\n    61\t        print(\&quot;登录获取：https://k8n.cn/student/login\&quot;)\n    62\t        print(\&quot;Tip:90%的失败由Cookie变更导致\&quot;)\n    63\t        Cookies = []\n    64\t        print(\&quot;请输入你的Cookie，输入空行结束，支持用户备注格式如下\&quot;)\n    65\t        print(\&quot;username=&lt;备注&gt;;remember....&lt;魔方Cookie&gt;\&quot;)\n    66\t        while True:\n    67\t            cookie = input(\&quot;Cookie: \&quot;)\n    68\t            if not cookie:\n    69\t                break\n    70\t            Cookies.append(cookie)\n    71\t        print(\&quot;----------配置定时任务(可选)----------\&quot;)\n    72\t        print(\&quot;格式为00:00,例如1:30要填写为01:30!不设置定时请留空\&quot;)\n    73\t        print(\&quot;Tip：请注意以上格式并使用英文符号“:”不要使用中文符号“：”\&quot;)\n    74\t        scheduletime = input(\&quot;请输入签到时间：\&quot;)\n    75\t        if scheduletime==\&quot;\&quot;:\n    76\t            print(\&quot;您未填写签到时间，未启用定时签到，启动即开始签到\&quot;)\n    77\t        print(\&quot;----------远程推送----------\&quot;)\n    78\t        pushtoken = input(\&quot;(未适配新版多人签到，如果是多人签到建议不使用)\\n请输入pushplus推送密钥，不需要请留空：\&quot;)\n    79\t\n    80\t        print(\&quot;配置完成，您的信息将写入json文件，下次使用将直接从json文件导入\&quot;)\n    81\t        # 2. 修改数据\n    82\t        json_data[\&quot;class\&quot;] = ClassID\n    83\t        json_data[\&quot;lat\&quot;] = X\n    84\t        json_data[\&quot;lng\&quot;] = Y\n    85\t        json_data[\&quot;acc\&quot;] = ACC\n    86\t        json_data[\&quot;cookie\&quot;] = Cookies\n    87\t        json_data[\&quot;scheduletime\&quot;] = scheduletime\n    88\t        json_data[\&quot;pushplus\&quot;] = pushtoken\n    89\t        json_data[\&quot;configLock\&quot;] = True\n    90\t        # 3. 写回JSON文件\n    91\t        with open(file_path, \&quot;w\&quot;) as file:\n    92\t            json.dump(json_data, file, indent=4) # indent 设置缩进为4个空格\n    93\t        print(\&quot;数据已保存到\&quot;+current_directory+\&quot;下的data.json中。\&quot;)\n    94\t    else:\n    95\t        print(\&quot;----------欢迎回来----------\&quot;)\n    96\t        ClassID = json_data[\&quot;class\&quot;]\n    97\t        X = json_data[\&quot;lat\&quot;]\n    98\t        Y = json_data[\&quot;lng\&quot;]\n    99\t        ACC = json_data[\&quot;acc\&quot;]\n   100\t        Cookies = json_data[\&quot;cookie\&quot;]\n   101\t        scheduletime = json_data[\&quot;scheduletime\&quot;]\n   102\t        pushtoken = json_data[\&quot;pushplus\&quot;]\n   103\t        print(\&quot;配置已读取\&quot;)\n   104\t        if scheduletime==\&quot;\&quot;:\n   105\t            print(\&quot;当前签到模式为：手动，即将开始签到\&quot;)\n   106\t        else:\n   107\t            print(\&quot;当前签到模式为：自动，启动定时任务\&quot;)\n   108\t    print(\&quot;----------信息----------\&quot;)\n   109\t    print(\&quot;班级ID:\&quot; + ClassID)\n   110\t    print(\&quot;纬度:\&quot; + X)\n   111\t    print(\&quot;经度:\&quot; + Y)\n   112\t    print(\&quot;海拔:\&quot; + ACC)\n   113\t    # print(\&quot;检索间隔:\&quot; + str(SearchTime))\n   114\t    print(\&quot;Cookie数量:\&quot; + str(len(Cookies)))\n   115\t    print(\&quot;定时:\&quot; + scheduletime)\n   116\t    print(\&quot;通知token:\&quot; + pushtoken)\n   117\t    if debug:print(\&quot;Debug:\&quot; + str(debug))\n   118\t    print(\&quot;---------------------\&quot;)\n   119\t\n   120\tdef printLog(type, message):\n   121\t    if debug:\n   122\t        if type == \&quot;info\&quot;:\n   123\t            logger.info(message)\n   124\t        elif type == \&quot;warning\&quot;:\n   125\t            logger.warning(message)\n   126\t        elif type == \&quot;error\&quot;:\n   127\t            logger.error(message)\n   128\t        elif type == \&quot;critical\&quot;:\n   129\t            logger.critical(message)\n   130\t        else:\n   131\t            logger.info(message)\n   132\t\n   133\tif debug:\n   134\t    # 创建 logger\n   135\t    logger = logging.getLogger()\n   136\t    logger.setLevel(logging.INFO)\n   137\t    # 创建文件处理器并设置编码为 UTF-8\n   138\t    file_handler = logging.FileHandler('AutoCheckBJMF.log', encoding='utf-8')\n   139\t    formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')\n   140\t    file_handler.setFormatter(formatter)\n   141\t    # 将处理器添加到 logger\n   142\t    logger.addHandler(file_handler)\n   143\t    printLog(\&quot;info\&quot;, \&quot;已启动Debug\&quot;)\n   144\tprint(\&quot;★一切就绪，程序开始执行\\\\^o^/\&quot;)\n   145\t\n   146\t### 请注意，下述两个自动任务功能未适配\n   147\t# GitHub Actions自动任务\n   148\t# ClassID = os.environ['ClassID']\n   149\t# X = os.environ['X']\n   150\t# Y = os.environ['Y']\n   151\t# ACC = os.environ['ACC']\n   152\t# SearchTime = os.environ['SearchTime']\n   153\t# Cookies = os.environ['Cookies']\n   154\t# token = os.environ['token']\n   155\t#scheduletime = os.environ['scheduletime']\n   156\t\n   157\t# 本地面板运行\n   158\t#ClassID = ''\n   159\t#X = ''\n   160\t#Y = ''\n   161\t#ACC = ''\n   162\t#SearchTime = 60\n   163\t#Cookies = ''\n   164\t#token = ''  #在pushplus网站中可以找到\n   165\t#scheduletime =''\n   166\t### 请注意，上述两个自动任务功能未适配\n   167\t\n   168\t# 随机经纬，用于多人签到定位偏移\n   169\tdef modify_decimal_part(num):\n   170\t    num = float(num)\n   171\t    # print(num)\n   172\t    # 将浮点数转换为字符串\n   173\t    num_str = f\&quot;{num:.8f}\&quot;  # 确保有足够的小数位数\n   174\t    # 找到小数点的位置\n   175\t    decimal_index = num_str.find('.')\n   176\t    # 提取小数点后4到6位\n   177\t    decimal_part = num_str[decimal_index + 4:decimal_index + 9]\n   178\t    # 将提取的小数部分转换为整数\n   179\t    decimal_value = int(decimal_part)\n   180\t    # 生成一个在-150到150范围的随机整数\n   181\t    random_offset = random.randint(-15000, 15000)\n   182\t    # 计算新的小数部分\n   183\t    new_decimal_value = decimal_value + random_offset\n   184\t    # 将新的小数部分转换为字符串，并确保它有3位\n   185\t    new_decimal_str = f\&quot;{new_decimal_value:05d}\&quot;\n   186\t    # 拼接回原浮点数\n   187\t    new_num_str = num_str[:decimal_index + 4] + new_decimal_str + num_str[decimal_index + 9:]\n   188\t    # 将新的字符串转换回浮点数\n   189\t    new_num = float(new_num_str)\n   190\t\n   191\t    return new_num\n   192\t\n   193\tdef thisTime(hour,minute):\n   194\t    # 指定的小时和分钟，这里示例为21:50，你可以按需修改\n   195\t    target_hour,target_minute = hour,minute\n   196\t\n   197\t    # while True:\n   198\t    # 获取当前时间的时间戳\n   199\t    current_time_stamp = time.time()\n   200\t    # 获取当前时间的结构体\n   201\t    current_time_struct = time.localtime(current_time_stamp)\n   202\t\n   203\t    # 获取当天的日期部分，构造一个新的时间结构体，用于设置指定时间\n   204\t    today_date = time.strftime(\&quot;%Y-%m-%d\&quot;, current_time_struct)\n   205\t    target_time_struct = time.strptime(today_date + \&quot; \&quot; + str(target_hour) + \&quot;:\&quot; + str(target_minute) + \&quot;:00\&quot;, \&quot;%Y-%m-%d %H:%M:%S\&quot;)\n   206\t    target_time_stamp = time.mktime(target_time_struct)\n   207\t\n   208\t    if target_time_stamp &lt; current_time_stamp:\n   209\t        # 如果目标时间已经小于当前时间，说明今天的时间已经过了，那就设置为明天的同样时间\n   210\t        target_time_stamp += 24 * 3600\n   211\t\n   212\t    # 计算时间差（单位为秒）\n   213\t    remaining_seconds_main = int(target_time_stamp - current_time_stamp)\n   214\t    # 计算剩余小时数\n   215\t    remaining_hours = remaining_seconds_main // 3600\n   216\t    remaining_seconds = remaining_seconds_main % 3600\n   217\t    # 计算剩余分钟数\n   218\t    remaining_minutes = remaining_seconds // 60\n   219\t    remaining_seconds %= 60\n   220\t\n   221\t    # 格式化当前时间结构体为字符串\n   222\t    current_time = time.strftime(\&quot;%Y-%m-%d %H:%M\&quot;, current_time_struct)\n   223\t\n   224\t    # 区分剩余时间的显示逻辑，以优化终端内容的显示阅读体验\n   225\t    if remaining_seconds_main &lt; 300:\n   226\t        # 如果剩余时间小于5分钟则每秒刷新\n   227\t        print(\&quot;\\r当前时间：{}，距离下次任务执行{}:{} 还剩{}分钟{}秒\\t\\t\&quot;.format(\n   228\t            current_time, target_hour, target_minute, remaining_minutes, remaining_seconds), end=\&quot;\&quot;)\n   229\t        time.sleep(1)\n   230\t    else:\n   231\t        # 如果剩余时间大于5分钟则每分钟刷新\n   232\t        print(\&quot;\\r当前时间：{}，距离下次任务执行{}:{} 还剩{}小时{}分钟\\t\\t\&quot;.format(\n   233\t            current_time, target_hour, target_minute, remaining_hours, remaining_minutes), end=\&quot;\&quot;)\n   234\t        time.sleep(60)\n   235\t\n   236\tdef qiandao(theCookies):\n   237\t    # title = '班级魔法自动签到任务'  # 改成你要的标题内容\n   238\t    url = 'http://k8n.cn/student/course/' + ClassID + '/punchs'\n   239\t    errorCookie = []\n   240\t    nullCookie = 0\n   241\t    # 多用户检测签到\n   242\t    for uid in range(0,len(theCookies)):\n   243\t        onlyCookie = theCookies[uid]\n   244\t\n   245\t        # 使用正则表达式提取目标字符串 - 用户备注\n   246\t        pattern = r'username=[^;]+'\n   247\t        result = re.search(pattern, onlyCookie)\n   248\t\n   249\t        if result:\n   250\t            username_string = \&quot; &lt;%s&gt;\&quot;%result.group(0).split(\&quot;=\&quot;)[1]\n   251\t        else:\n   252\t            username_string = \&quot;\&quot;\n   253\t\n   254\t        # 用户信息显示与5秒冷却\n   255\t        print(\&quot;☆☆☆☆☆ 用户UID：%d%s 即将签到 ☆☆☆☆☆\&quot;%(uid+1,username_string),end=\&quot;\&quot;)\n   256\t        time.sleep(1) #暂停5秒后进行签到\n   257\t        print(\&quot;\\r★☆☆☆☆ 用户UID：%d%s 即将签到 ☆☆☆☆★\&quot;%(uid+1,username_string),end=\&quot;\&quot;)\n   258\t        time.sleep(1)\n   259\t        print(\&quot;\\r★★☆☆☆ 用户UID：%d%s 即将签到 ☆☆☆★★\&quot;%(uid+1,username_string),end=\&quot;\&quot;)\n   260\t        time.sleep(1)\n   261\t        print(\&quot;\\r★★★☆☆ 用户UID：%d%s 即将签到 ☆☆★★★\&quot;%(uid+1,username_string),end=\&quot;\&quot;)\n   262\t        time.sleep(1)\n   263\t        print(\&quot;\\r★★★★☆ 用户UID：%d%s 即将签到 ☆★★★★\&quot;%(uid+1,username_string),end=\&quot;\&quot;)\n   264\t        time.sleep(1)\n   265\t        print(\&quot;\\r★★★★★ 用户UID：%d%s 开始签到 ★★★★★\&quot;%(uid+1,username_string))\n   266\t\n   267\t        # 使用正则表达式提取目标字符串 - Cookie\n   268\t        pattern = r'remember_student_59ba36addc2b2f9401580f014c7f58ea4e30989d=[^;]+'\n   269\t        result = re.search(pattern, onlyCookie)\n   270\t\n   271\t        if result:\n   272\t            extracted_string = result.group(0)\n   273\t            if debug:\n   274\t                print(extracted_string)\n   275\t            headers = {\n   276\t                'User-Agent': 'Mozilla/5.0 (Linux; Android 9; AKT-AK47 Build/USER-AK47; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/116.0.0.0 Mobile Safari/537.36 XWEB/1160065 MMWEBSDK/20231202 MMWEBID/1136 MicroMessenger/8.0.47.2560(0x28002F35) WeChat/arm64 Weixin NetType/4G Language/zh_CN ABI/arm64',\n   277\t                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/wxpic,image/tpg,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n   278\t                'X-Requested-With': 'com.tencent.mm',\n   279\t                'Referer': 'http://k8n.cn/student/course/' + ClassID,\n   280\t                'Accept-Encoding': 'gzip, deflate',\n   281\t                'Accept-Language': 'zh-CN,zh-SG;q=0.9,zh;q=0.8,en-SG;q=0.7,en-US;q=0.6,en;q=0.5',\n   282\t                'Cookie': extracted_string\n   283\t            }\n   284\t\n   285\t            response = requests.get(url, headers=headers)\n   286\t            print(\&quot;响应:\&quot;, response)\n   287\t\n   288\t            # 创建 Beautiful Soup 对象解析 HTML\n   289\t            soup = BeautifulSoup(response.text, 'html.parser')\n   290\t\n   291\t            title_tag = soup.find('title')\n   292\t\n   293\t            if debug:\n   294\t                print(\&quot;★☆★\&quot;)\n   295\t                print(soup)\n   296\t                print(\&quot;===\&quot;)\n   297\t                print(title_tag)\n   298\t                print(\&quot;★☆★\&quot;)\n   299\t\n   300\t            if title_tag and \&quot;出错\&quot; not in title_tag.text:\n   301\t                # 使用正则表达式从 HTML 文本中提取所有 punch_gps() 中的数字\n   302\t                pattern = re.compile(r'punch_gps\\((\\d+)\\)')\n   303\t                matches = pattern.findall(response.text)\n   304\t                print(\&quot;找到GPS定位签到:\&quot;, matches)\n   305\t                pattern2 = re.compile(r'punchcard_(\\d+)')\n   306\t                matches2 = pattern2.findall(response.text)\n   307\t                print(\&quot;找到扫码签到:\&quot;, matches2)\n   308\t                matches.extend(matches2)\n   309\t                if matches:\n   310\t                    for match in matches:\n   311\t                        url1 = \&quot;http://k8n.cn/student/punchs/course/\&quot; + ClassID + \&quot;/\&quot; + match\n   312\t                        newX = modify_decimal_part(X)\n   313\t                        newY = modify_decimal_part(Y)\n   314\t                        payload = {\n   315\t                            'id': match,\n   316\t                            'lat': newX,\n   317\t                            'lng': newY,\n   318\t                            'acc': ACC,  #未知，可能是高度\n   319\t                            'res': '',  #拍照签到\n   320\t                            'gps_addr': ''  #未知，抓取时该函数为空\n   321\t                        }\n   322\t\n   323\t                        response = requests.post(url1, headers=headers, data=payload)\n   324\t                        print(\&quot;签到请求已发送： 签到ID[%s] 签到定位[%s,%s] 签到海拔[%s]\&quot;%(match, newX, newY, ACC))\n   325\t                        printLog(\&quot;info\&quot;, \&quot;用户UID[%d%s] | 签到请求已发送： 签到ID[%s] 签到定位[%s,%s] 签到海拔[%s]\&quot;%(uid+1, username_string, match, newX, newY, ACC))\n   326\t\n   327\t                        if response.status_code == 200:\n   328\t                            print(\&quot;请求成功，响应:\&quot;, response)\n   329\t\n   330\t                            # 解析响应的 HTML 内容\n   331\t                            soup_response = BeautifulSoup(response.text, 'html.parser')\n   332\t                            # h1_tag = soup_response.find('h1')\n   333\t                            div_tag = soup_response.find('div', id='title')\n   334\t\n   335\t                            if debug:\n   336\t                                print(\&quot;★☆★\&quot;)\n   337\t                                print(soup_response)\n   338\t                                print(\&quot;===\&quot;)\n   339\t                                print(div_tag)\n   340\t                                print(\&quot;★☆★\&quot;)\n   341\t\n   342\t                            if div_tag:\n   343\t                                h1_text = div_tag.text\n   344\t                                print(h1_text)\n   345\t                                printLog(\&quot;info\&quot;, \&quot;用户UID[%d%s] | %s\&quot;%(uid+1, username_string, h1_text))\n   346\t                                # encoding:utf-8\n   347\t                                if pushtoken != \&quot;\&quot; and h1_text== \&quot;签到成功\&quot;:\n   348\t                                    url = 'http://www.pushplus.plus/send?token=' + pushtoken + '&amp;title=' + \&quot;班级魔法自动签到任务\&quot; + '&amp;content=' + h1_text  # 不使用请注释\n   349\t                                    requests.get(url)  # 不使用请注释\n   350\t                                continue  # 返回到查找进行中的签到循环\n   351\t                            else:\n   352\t                                print(\&quot;未找到 &lt;h1&gt; 标签，可能存在错误\&quot;)\n   353\t                                printLog(\&quot;info\&quot;, \&quot;用户UID[%d%s] | 未找到 &lt;h1&gt; 标签，可能存在错误或签到成功\&quot;%(uid+1, username_string))\n   354\t                        else:\n   355\t                            print(\&quot;请求失败，状态码:\&quot;, response.status_code)\n   356\t                            printLog(\&quot;error\&quot;, \&quot;用户UID[%d%s] | 请求失败，状态码: %d\&quot;%(uid+1, username_string, response.status_code))\n   357\t                            print(\&quot;将本Cookie加入重试队列\&quot;)\n   358\t                            errorCookie.append(onlyCookie)\n   359\t                else:\n   360\t                    print(\&quot;未找到在进行的签到\&quot;)\n   361\t            else:\n   362\t                print(\&quot;登录状态异常，将本Cookie加入重试队列\&quot;)\n   363\t                printLog(\&quot;error\&quot;, \&quot;用户UID[%d%s] | 登录状态异常\&quot;%(uid+1, username_string))\n   364\t                errorCookie.append(onlyCookie)\n   365\t        else:\n   366\t            nullCookie += 1\n   367\t            print(\&quot;未找到匹配的字符串，检查Cookie是否错误！\&quot;)\n   368\t    return errorCookie, nullCookie\n   369\tdef job():\n   370\t    current_time = datetime.now()\n   371\t    print(\&quot;\\n进入检索，当前时间为:\&quot;, current_time)\n   372\t\n   373\t    errorCookie,nullCookie = qiandao(Cookies)\n   374\t    if len(errorCookie)&gt;0:\n   375\t        print(\&quot;检测到有Cookie签到失败，等待5分钟后启动一次重试队列\&quot;)\n   376\t        time.sleep(300)\n   377\t        errorCookie = qiandao(errorCookie)\n   378\t        if len(errorCookie)&gt;0:\n   379\t            print(\&quot;检测到仍然有Cookie签到失败，等待15分钟后最后启动一次重试队列\&quot;)\n   380\t            time.sleep(900)\n   381\t            errorCookie = qiandao(errorCookie)\n   382\t            if len(errorCookie)&gt;0:\n   383\t                print(\&quot;!!!  检测到仍然有Cookie签到失败，请检查Cookie是否过期或网络异常  !!!\&quot;)\n   384\t    elif nullCookie&gt;0:\n   385\t        print(\&quot;!!! 本次签到存在异常，请检查Cookie是否均已正常配置 !!!\&quot;)\n   386\t    else:\n   387\t        print(\&quot;★本次签到圆满成功★\&quot;)\n   388\t\n   389\t    print(\&quot;■ □ ■ □ ■ □ 我是分割线 □ ■ □ ■ □ ■\&quot;)\n   390\t\n   391\t    if scheduletime:\n   392\t        print(\&quot;☆本次签到结束，等待设定的时间%s到达☆\\n\&quot;%scheduletime)\n   393\t\n   394\tif (scheduletime != \&quot;\&quot;):\n   395\t    print(\&quot;☆等待设定时间\&quot; + scheduletime + \&quot;到达☆\&quot;)\n   396\t    # 设置定时任务，在每天的早上8点触发\n   397\t    schedule.every().day.at(scheduletime).do(job)\n   398\t    # 格式化时间\n   399\t    hour,minute = scheduletime.split(\&quot;:\&quot;)\n   400\t\n   401\t    while True:\n   402\t        schedule.run_pending()\n   403\t        thisTime(hour,minute) # 倒计时\n   404\telse:\n   405\t    job()\n   406\t    input(\&quot;手动签到已结束，敲击回车关闭窗口☆~\&quot;)\n   407\t\nTotal lines in file: 407\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_014cmGfr6iaidfQdLE1zCkL4&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;C:/Users/MSI-NB/PycharmProjects/AutoCheckBJMF&quot;,&quot;folderRoot&quot;:&quot;C:/Users/MSI-NB/PycharmProjects/AutoCheckBJMF&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-17T10:37:04.148Z&quot;,&quot;response_text&quot;:&quot;现在让我查看README文件来了解更多项目信息：\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;27fbd82a-e3e5-4fd5-8c18-9076599c309f&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_01HMQrc3gajARnGo7A7jtiNm&quot;,&quot;tool_name&quot;:&quot;codebase-retrieval&quot;,&quot;input_json&quot;:&quot;{\&quot;information_request\&quot;: \&quot;\\u67e5\\u627e\\u9879\\u76ee\\u4e2d\\u6240\\u6709\\u7684\\u914d\\u7f6e\\u6587\\u4ef6\\u3001\\u4f9d\\u8d56\\u6587\\u4ef6\\u548c\\u76f8\\u5173\\u7684\\u6587\\u6863\\uff0c\\u5305\\u62ecrequirements.txt\\u3001setup.py\\u3001config\\u76f8\\u5173\\u6587\\u4ef6\\u7b49\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;现在让我检查是否有其他配置文件：\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on README.md:\n     1\t&lt;div align=\&quot;center\&quot;&gt;\n     2\t    &lt;h1&gt;AutoCheckBJMF 班级魔方自动签到&lt;/h1&gt;\n     3\t    &lt;img src=\&quot;https://img.shields.io/github/license/JasonYANG170/AutoCheckBJMF?label=License&amp;style=for-the-badge\&quot;&gt;\n     4\t    &lt;img src=\&quot;https://img.shields.io/github/commit-activity/w/JasonYANG170/AutoCheckBJMF?style=for-the-badge\&quot;&gt;\n     5\t&lt;img src=\&quot;https://img.shields.io/github/languages/count/JasonYANG170/AutoCheckBJMF?logo=python&amp;style=for-the-badge\&quot;&gt;\n     6\t\t&lt;br&gt;\n     7\t    \t&lt;a href=\&quot;https://discord.com/invite/az3ceRmgVe\&quot;&gt;&lt;img alt=\&quot;Discord\&quot; src=\&quot;https://img.shields.io/discord/978108215499816980?style=social&amp;logo=discord&amp;label=echosec\&quot;&gt;&lt;/a&gt;\n     8\t  &lt;br&gt;\n     9\t&lt;img src=\&quot;https://github.com/JasonYANG170/AutoCheckBJMF/assets/39414350/7400a5d2-1031-4e31-b189-4cbfa2df51e6\&quot;&gt;\n    10\t\t\n    11\t这是一项基于Python语言的班级魔方GPS自动签到Script\n    12\t\n    13\t&lt;br&gt;\n    14\t\n    15\t&lt;/div&gt;\n    16\t\n    17\t严禁将本程序用于违法用途，请遵守地区法规，另如有违背平台利益请与我联系撤销平台支持\n    18\t## 支持平台\n    19\t**Windows、Mac、Linux**\n    20\t## 支持的签到模式  \n    21\t- ✅ 二维码签到    （验证通过）\n    22\t- ✅ GPS签到      （验证通过）\n    23\t- ✅ GPS+拍照签到 （验证通过）\n    24\t-  密码签到      \n    25\t\n    26\t## 功能\n    27\t- ✅ 支持定时开启签到\n    28\t- ✅ 支持24小时无人值守\n    29\t- ✅ 支持msi安装包一键式安装\n    30\t- ✅ 支持自定义经纬度完成定位签到\n    31\t- ✅ 支持循环检测GPS及扫码签到任务\n    32\t- ✅ 支持自动导入data.json配置文件 \n    33\t- ✅ 支持自动保存信息到data.json文件\n    34\t- ✅ 支持连续签到，无需重复抓取Cookie值 \n    35\t\n    36\t\n    37\t如遇问题，请向我提出issues\n    38\t\n    39\t## 使用教程\n    40\t维基Wiki https://github.com/JasonYANG170/AutoCheckBJMF/wiki\n    41\t\n    42\t## 自行打包\n    43\t`pyinstaller main.spec`\n    44\t\n    45\t## 喜欢这个项目，请为我点个Star ⭐ \n    46\t\n    47\t[![Star History Chart](https://api.star-history.com/svg?repos=JasonYANG170/AutoCheckBJMF&amp;type=Date)](https://star-history.com/#star-history/star-history&amp;Date)\n    48\t\nTotal lines in file: 48\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_01SHXrnG75xqtdRqxrCjczYJ&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;C:/Users/MSI-NB/PycharmProjects/AutoCheckBJMF&quot;,&quot;folderRoot&quot;:&quot;C:/Users/MSI-NB/PycharmProjects/AutoCheckBJMF&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-17T10:37:14.815Z&quot;,&quot;response_text&quot;:&quot;现在让我检查是否有其他配置文件：\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;f526002f-4bfe-4938-be7d-59f6f2006c7e&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_014zL6h6t2zj94QhLj7DW3Ni&quot;,&quot;tool_name&quot;:&quot;render-mermaid&quot;,&quot;input_json&quot;:&quot;{\&quot;title\&quot;: \&quot;AutoCheckBJMF \\u6267\\u884c\\u6d41\\u7a0b\\u56fe\&quot;, \&quot;diagram_definition\&quot;: \&quot;flowchart TD\\n    A[\\u7a0b\\u5e8f\\u542f\\u52a8] --&gt; B[\\u68c0\\u67e5config.json\\u6587\\u4ef6]\\n    B --&gt; C{\\u6587\\u4ef6\\u662f\\u5426\\u5b58\\u5728?}\\n    C --&gt;|\\u5426| D[\\u521b\\u5efa\\u9ed8\\u8ba4\\u914d\\u7f6e\\u6587\\u4ef6]\\n    C --&gt;|\\u662f| E[\\u8bfb\\u53d6\\u914d\\u7f6e\\u6587\\u4ef6]\\n    D --&gt; F[\\u9996\\u6b21\\u914d\\u7f6e\\u6d41\\u7a0b]\\n    E --&gt; G{configLock\\u72b6\\u6001?}\\n    G --&gt;|false| F\\n    G --&gt;|true| H[\\u8bfb\\u53d6\\u5df2\\u6709\\u914d\\u7f6e]\\n    \\n    F --&gt; I[\\u8f93\\u5165\\u73ed\\u7ea7ID]\\n    I --&gt; J[\\u8f93\\u5165\\u7ecf\\u7eac\\u5ea6\\u5750\\u6807]\\n    J --&gt; K[\\u8f93\\u5165\\u6d77\\u62d4]\\n    K --&gt; L[\\u914d\\u7f6eCookie]\\n    L --&gt; M[\\u914d\\u7f6e\\u5b9a\\u65f6\\u4efb\\u52a1]\\n    M --&gt; N[\\u914d\\u7f6e\\u63a8\\u9001token]\\n    N --&gt; O[\\u4fdd\\u5b58\\u914d\\u7f6e\\u5e76\\u9501\\u5b9a]\\n    \\n    H --&gt; P[\\u663e\\u793a\\u914d\\u7f6e\\u4fe1\\u606f]\\n    O --&gt; P\\n    P --&gt; Q{\\u662f\\u5426\\u8bbe\\u7f6e\\u5b9a\\u65f6?}\\n    Q --&gt;|\\u662f| R[\\u542f\\u52a8\\u5b9a\\u65f6\\u4efb\\u52a1]\\n    Q --&gt;|\\u5426| S[\\u7acb\\u5373\\u6267\\u884c\\u7b7e\\u5230]\\n    \\n    R --&gt; T[\\u7b49\\u5f85\\u5b9a\\u65f6\\u65f6\\u95f4]\\n    T --&gt; U[\\u6267\\u884cjob\\u51fd\\u6570]\\n    S --&gt; U\\n    \\n    U --&gt; V[\\u8c03\\u7528qiandao\\u51fd\\u6570]\\n    V --&gt; W[\\u904d\\u5386\\u6240\\u6709Cookie]\\n    W --&gt; X[\\u63d0\\u53d6\\u7528\\u6237\\u5907\\u6ce8]\\n    X --&gt; Y[\\u53d1\\u9001\\u7b7e\\u5230\\u9875\\u9762\\u8bf7\\u6c42]\\n    Y --&gt; Z{\\u767b\\u5f55\\u72b6\\u6001\\u6b63\\u5e38?}\\n    Z --&gt;|\\u5426| AA[\\u52a0\\u5165\\u91cd\\u8bd5\\u961f\\u5217]\\n    Z --&gt;|\\u662f| BB[\\u89e3\\u6790\\u7b7e\\u5230\\u4efb\\u52a1]\\n    BB --&gt; CC[\\u67e5\\u627eGPS/\\u626b\\u7801\\u7b7e\\u5230]\\n    CC --&gt; DD{\\u627e\\u5230\\u7b7e\\u5230\\u4efb\\u52a1?}\\n    DD --&gt;|\\u5426| EE[\\u65e0\\u7b7e\\u5230\\u4efb\\u52a1]\\n    DD --&gt;|\\u662f| FF[\\u751f\\u6210\\u968f\\u673a\\u5750\\u6807\\u504f\\u79fb]\\n    FF --&gt; GG[\\u53d1\\u9001\\u7b7e\\u5230\\u8bf7\\u6c42]\\n    GG --&gt; HH[\\u89e3\\u6790\\u7b7e\\u5230\\u7ed3\\u679c]\\n    HH --&gt; II{\\u7b7e\\u5230\\u6210\\u529f?}\\n    II --&gt;|\\u662f| JJ[\\u63a8\\u9001\\u901a\\u77e5]\\n    II --&gt;|\\u5426| AA\\n    \\n    AA --&gt; KK[\\u91cd\\u8bd5\\u673a\\u5236]\\n    KK --&gt; LL[5\\u5206\\u949f\\u540e\\u91cd\\u8bd5]\\n    LL --&gt; MM[15\\u5206\\u949f\\u540e\\u6700\\u7ec8\\u91cd\\u8bd5]\\n    \\n    EE --&gt; NN[\\u5b8c\\u6210\\u672c\\u8f6e\\u7b7e\\u5230]\\n    JJ --&gt; NN\\n    MM --&gt; NN\\n    NN --&gt; OO{\\u5b9a\\u65f6\\u6a21\\u5f0f?}\\n    OO --&gt;|\\u662f| T\\n    OO --&gt;|\\u5426| PP[\\u7a0b\\u5e8f\\u7ed3\\u675f]\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;基于对代码库的详细分析，我现在为您提供全面的执行流程分析和Cookie获取机制改进方案：\n\n## 1. 代码执行流程分析\n\n### 主要执行流程\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;The following code sections were retrieved:\nPath: main.py\n     1\timport random\n     2\timport requests\n     3\timport re\n     4\timport time\n     5\timport os\n     6\tfrom bs4 import BeautifulSoup\n     7\timport json\n     8\timport schedule\n     9\tfrom datetime import datetime\n    10\timport logging\n    11\t\n    12\t# 获取当前目录\n    13\tcurrent_directory = os.getcwd()\n    14\tfile_name = \&quot;config.json\&quot;\n    15\tfile_path = os.path.join(current_directory, file_name)\n    16\t\n    17\tprint(\&quot;----------提醒----------\&quot;)\n    18\tprint(\&quot;项目地址：https://github.com/JasonYANG170/AutoCheckBJMF\&quot;)\n    19\tprint(\&quot;请查看教程以获取Cookie和班级ID\&quot;)\n    20\tprint(\&quot;config.json文件位置：\&quot;, current_directory)\n    21\t\n    22\t# 检查文件是否存在\n    23\tif not os.path.exists(file_path):\n    24\t    # 定义默认的 JSON 数据\n    25\t    default_config = {\n    26\t        \&quot;class\&quot;: \&quot;\&quot;, # 班级ID\n    27\t        \&quot;lat\&quot;: \&quot;\&quot;, # 纬度\n    28\t        \&quot;lng\&quot;: \&quot;\&quot;, # 经度\n    29\t        \&quot;acc\&quot;: \&quot;\&quot;, # 海拔\n    30\t        \&quot;time\&quot;: 0, # 等待时间（已弃用）\n    31\t        \&quot;cookie\&quot;: \&quot;\&quot;, # 用户令牌\n    32\t        \&quot;scheduletime\&quot;: \&quot;\&quot;, # 定时任务\n    33\t        \&quot;pushplus\&quot;: \&quot;\&quot;, # pushpush推送令牌\n    34\t        \&quot;debug\&quot;: False, # 调试模式\n    35\t        \&quot;configLock\&quot;: False #配置编辑状态，\n    36\t    }\n    37\t    # 文件不存在，创建并写入默认数据\n    38\t    with open(file_path, \&quot;w\&quot;) as file:\n    39\t        json.dump(default_config, file, indent=4)\n    40\t    print(\&quot;----------初始化----------\&quot;)\n    41\t    print(f\&quot;文件 {file_name} 不存在，已创建并填充默认数据。\&quot;)\n    42\t\n    43\t# 读取外部 JSON 文件中的数据\n    44\twith open(file_path, 'r') as file:\n    45\t    json_data = json.load(file)\n    46\t    debug = json_data[\&quot;debug\&quot;]\n    47\t\n    48\t    # 判断是否首次使用或解除配置锁定\n    49\t    if not json_data['configLock']:\n    50\t        print(\&quot;----------基础配置(必填)----------\&quot;)\n    51\t        print(\&quot;☆请通过查看教程抓包获取班级ID\&quot;)\n    52\t        ClassID = input(\&quot;请输入班级ID：\&quot;)\n    53\t        print(\&quot;☆输入的经纬度格式为x.x，请输入至少8位小数用于定位微偏移，不满8位用0替补！\&quot;)\n    54\t        print(\&quot;☆腾讯坐标拾取工具：https://lbs.qq.com/getPoint/\&quot;)\n    55\t        X = input(\&quot;请输入纬度(X)：\&quot;)\n    56\t        Y = input(\&quot;请输入经度(Y)：\&quot;)\n    57\t        ACC = input(\&quot;请输入海拔：\&quot;)\n    58\t        print(\&quot;----------配置Cookie(必填)----------\&quot;)\n    59\t        print(\&quot;请通过查看教程抓包获取Cookie\&quot;)\n    60\t        print(\&quot;教程：https://github.com/JasonYANG170/AutoCheckBJMF/wiki/\&quot;)\n    61\t        print(\&quot;登录获取：https://k8n.cn/student/login\&quot;)\n    62\t        print(\&quot;Tip:90%的失败由Cookie变更导致\&quot;)\n    63\t        Cookies = []\n    64\t        print(\&quot;请输入你的Cookie，输入空行结束，支持用户备注格式如下\&quot;)\n    65\t        print(\&quot;username=&lt;备注&gt;;remember....&lt;魔方Cookie&gt;\&quot;)\n    66\t        while True:\n    67\t            cookie = input(\&quot;Cookie: \&quot;)\n    68\t            if not cookie:\n    69\t                break\n    70\t            Cookies.append(cookie)\n    71\t        print(\&quot;----------配置定时任务(可选)----------\&quot;)\n    72\t        print(\&quot;格式为00:00,例如1:30要填写为01:30!不设置定时请留空\&quot;)\n    73\t        print(\&quot;Tip：请注意以上格式并使用英文符号“:”不要使用中文符号“：”\&quot;)\n    74\t        scheduletime = input(\&quot;请输入签到时间：\&quot;)\n    75\t        if scheduletime==\&quot;\&quot;:\n    76\t            print(\&quot;您未填写签到时间，未启用定时签到，启动即开始签到\&quot;)\n    77\t        print(\&quot;----------远程推送----------\&quot;)\n    78\t        pushtoken = input(\&quot;(未适配新版多人签到，如果是多人签到建议不使用)\\n请输入pushplus推送密钥，不需要请留空：\&quot;)\n    79\t\n    80\t        print(\&quot;配置完成，您的信息将写入json文件，下次使用将直接从json文件导入\&quot;)\n    81\t        # 2. 修改数据\n    82\t        json_data[\&quot;class\&quot;] = ClassID\n    83\t        json_data[\&quot;lat\&quot;] = X\n    84\t        json_data[\&quot;lng\&quot;] = Y\n    85\t        json_data[\&quot;acc\&quot;] = ACC\n    86\t        json_data[\&quot;cookie\&quot;] = Cookies\n    87\t        json_data[\&quot;scheduletime\&quot;] = scheduletime\n    88\t        json_data[\&quot;pushplus\&quot;] = pushtoken\n    89\t        json_data[\&quot;configLock\&quot;] = True\n    90\t        # 3. 写回JSON文件\n    91\t        with open(file_path, \&quot;w\&quot;) as file:\n    92\t            json.dump(json_data, file, indent=4) # indent 设置缩进为4个空格\n    93\t        print(\&quot;数据已保存到\&quot;+current_directory+\&quot;下的data.json中。\&quot;)\n    94\t    else:\n    95\t        print(\&quot;----------欢迎回来----------\&quot;)\n    96\t        ClassID = json_data[\&quot;class\&quot;]\n    97\t        X = json_data[\&quot;lat\&quot;]\n    98\t        Y = json_data[\&quot;lng\&quot;]\n    99\t        ACC = json_data[\&quot;acc\&quot;]\n   100\t        Cookies = json_data[\&quot;cookie\&quot;]\n   101\t        scheduletime = json_data[\&quot;scheduletime\&quot;]\n   102\t        pushtoken = json_data[\&quot;pushplus\&quot;]\n   103\t        print(\&quot;配置已读取\&quot;)\n   104\t        if scheduletime==\&quot;\&quot;:\n   105\t            print(\&quot;当前签到模式为：手动，即将开始签到\&quot;)\n   106\t        else:\n   107\t            print(\&quot;当前签到模式为：自动，启动定时任务\&quot;)\n   108\t    print(\&quot;----------信息----------\&quot;)\n   109\t    print(\&quot;班级ID:\&quot; + ClassID)\n   110\t    print(\&quot;纬度:\&quot; + X)\n   111\t    print(\&quot;经度:\&quot; + Y)\n   112\t    print(\&quot;海拔:\&quot; + ACC)\n   113\t    # print(\&quot;检索间隔:\&quot; + str(SearchTime))\n   114\t    print(\&quot;Cookie数量:\&quot; + str(len(Cookies)))\n   115\t    print(\&quot;定时:\&quot; + scheduletime)\n   116\t    print(\&quot;通知token:\&quot; + pushtoken)\n   117\t    if debug:print(\&quot;Debug:\&quot; + str(debug))\n   118\t    print(\&quot;---------------------\&quot;)\n   119\t\n   120\tdef printLog(type, message):\n   121\t    if debug:\n   122\t        if type == \&quot;info\&quot;:\n   123\t            logger.info(message)\n   124\t        elif type == \&quot;warning\&quot;:\n   125\t            logger.warning(message)\n   126\t        elif type == \&quot;error\&quot;:\n   127\t            logger.error(message)\n   128\t        elif type == \&quot;critical\&quot;:\n   129\t            logger.critical(message)\n   130\t        else:\n   131\t            logger.info(message)\n   132\t\n   133\tif debug:\n   134\t    # 创建 logger\n   135\t    logger = logging.getLogger()\n   136\t    logger.setLevel(logging.INFO)\n   137\t    # 创建文件处理器并设置编码为 UTF-8\n   138\t    file_handler = logging.FileHandler('AutoCheckBJMF.log', encoding='utf-8')\n   139\t    formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')\n   140\t    file_handler.setFormatter(formatter)\n   141\t    # 将处理器添加到 logger\n   142\t    logger.addHandler(file_handler)\n   143\t    printLog(\&quot;info\&quot;, \&quot;已启动Debug\&quot;)\n   144\tprint(\&quot;★一切就绪，程序开始执行\\\\^o^/\&quot;)\n   145\t\n   146\t### 请注意，下述两个自动任务功能未适配\n   147\t# GitHub Actions自动任务\n   148\t# ClassID = os.environ['ClassID']\n   149\t# X = os.environ['X']\n   150\t# Y = os.environ['Y']\n   151\t# ACC = os.environ['ACC']\n   152\t# SearchTime = os.environ['SearchTime']\n   153\t# Cookies = os.environ['Cookies']\n   154\t# token = os.environ['token']\n   155\t#scheduletime = os.environ['scheduletime']\n   156\t\n   157\t# 本地面板运行\n   158\t#ClassID = ''\n   159\t#X = ''\n   160\t#Y = ''\n   161\t#ACC = ''\n   162\t#SearchTime = 60\n   163\t#Cookies = ''\n   164\t#token = ''  #在pushplus网站中可以找到\n   165\t#scheduletime =''\n   166\t### 请注意，上述两个自动任务功能未适配\n   167\t\n   168\t# 随机经纬，用于多人签到定位偏移\n   169\tdef modify_decimal_part(num):\n   170\t    num = float(num)\n   171\t    # print(num)\n   172\t    # 将浮点数转换为字符串\n   173\t    num_str = f\&quot;{num:.8f}\&quot;  # 确保有足够的小数位数\n   174\t    # 找到小数点的位置\n   175\t    decimal_index = num_str.find('.')\n   176\t    # 提取小数点后4到6位\n   177\t    decimal_part = num_str[decimal_index + 4:decimal_index + 9]\n   178\t    # 将提取的小数部分转换为整数\n   179\t    decimal_value = int(decimal_part)\n   180\t    # 生成一个在-150到150范围的随机整数\n   181\t    random_offset = random.randint(-15000, 15000)\n   182\t    # 计算新的小数部分\n   183\t    new_decimal_value = decimal_value + random_offset\n   184\t    # 将新的小数部分转换为字符串，并确保它有3位\n   185\t    new_decimal_str = f\&quot;{new_decimal_value:05d}\&quot;\n   186\t    # 拼接回原浮点数\n   187\t    new_num_str = num_str[:decimal_index + 4] + new_decimal_str + num_str[decimal_index + 9:]\n   188\t    # 将新的字符串转换回浮点数\n   189\t    new_num = float(new_num_str)\n   190\t\n   191\t    return new_num\n   192\t\n   193\tdef thisTime(hour,minute):\n   194\t    # 指定的小时和分钟，这里示例为21:50，你可以按需修改\n   195\t    target_hour,target_minute = hour,minute\n   196\t\n   197\t    # while True:\n   198\t    # 获取当前时间的时间戳\n   199\t    current_time_stamp = time.time()\n   200\t    # 获取当前时间的结构体\n   201\t    current_time_struct = time.localtime(current_time_stamp)\n   202\t\n   203\t    # 获取当天的日期部分，构造一个新的时间结构体，用于设置指定时间\n   204\t    today_date = time.strftime(\&quot;%Y-%m-%d\&quot;, current_time_struct)\n   205\t    target_time_struct = time.strptime(today_date + \&quot; \&quot; + str(target_hour) + \&quot;:\&quot; + str(target_minute) + \&quot;:00\&quot;, \&quot;%Y-%m-%d %H:%M:%S\&quot;)\n   206\t    target_time_stamp = time.mktime(target_time_struct)\n   207\t\n   208\t    if target_time_stamp &lt; current_time_stamp:\n   209\t        # 如果目标时间已经小于当前时间，说明今天的时间已经过了，那就设置为明天的同样时间\n   210\t        target_time_stamp += 24 * 3600\n...\n   235\t\n   236\tdef qiandao(theCookies):\n   237\t    # title = '班级魔法自动签到任务'  # 改成你要的标题内容\n   238\t    url = 'http://k8n.cn/student/course/' + ClassID + '/punchs'\n   239\t    errorCookie = []\n   240\t    nullCookie = 0\n   241\t    # 多用户检测签到\n   242\t    for uid in range(0,len(theCookies)):\n   243\t        onlyCookie = theCookies[uid]\n   244\t\n   245\t        # 使用正则表达式提取目标字符串 - 用户备注\n   246\t        pattern = r'username=[^;]+'\n   247\t        result = re.search(pattern, onlyCookie)\n   248\t\n   249\t        if result:\n   250\t            username_string = \&quot; &lt;%s&gt;\&quot;%result.group(0).split(\&quot;=\&quot;)[1]\n   251\t        else:\n   252\t            username_string = \&quot;\&quot;\n...\n   281\t                'Accept-Language': 'zh-CN,zh-SG;q=0.9,zh;q=0.8,en-SG;q=0.7,en-US;q=0.6,en;q=0.5',\n   282\t                'Cookie': extracted_string\n   283\t            }\n   284\t\n   285\t            response = requests.get(url, headers=headers)\n   286\t            print(\&quot;响应:\&quot;, response)\n   287\t\n   288\t            # 创建 Beautiful Soup 对象解析 HTML\n   289\t            soup = BeautifulSoup(response.text, 'html.parser')\n   290\t\n   291\t            title_tag = soup.find('title')\n   292\t\n   293\t            if debug:\n   294\t                print(\&quot;★☆★\&quot;)\n   295\t                print(soup)\n   296\t                print(\&quot;===\&quot;)\n   297\t                print(title_tag)\n   298\t                print(\&quot;★☆★\&quot;)\n   299\t\n   300\t            if title_tag and \&quot;出错\&quot; not in title_tag.text:\n   301\t                # 使用正则表达式从 HTML 文本中提取所有 punch_gps() 中的数字\n   302\t                pattern = re.compile(r'punch_gps\\((\\d+)\\)')\n   303\t                matches = pattern.findall(response.text)\n   304\t                print(\&quot;找到GPS定位签到:\&quot;, matches)\n   305\t                pattern2 = re.compile(r'punchcard_(\\d+)')\n   306\t                matches2 = pattern2.findall(response.text)\n   307\t                print(\&quot;找到扫码签到:\&quot;, matches2)\n   308\t                matches.extend(matches2)\n   309\t                if matches:\n   310\t                    for match in matches:\n   311\t                        url1 = \&quot;http://k8n.cn/student/punchs/course/\&quot; + ClassID + \&quot;/\&quot; + match\n   312\t                        newX = modify_decimal_part(X)\n   313\t                        newY = modify_decimal_part(Y)\n   314\t                        payload = {\n   315\t                            'id': match,\n   316\t                            'lat': newX,\n   317\t                            'lng': newY,\n   318\t                            'acc': ACC,  #未知，可能是高度\n   319\t                            'res': '',  #拍照签到\n   320\t                            'gps_addr': ''  #未知，抓取时该函数为空\n   321\t                        }\n...\n   341\t\n   342\t                            if div_tag:\n   343\t                                h1_text = div_tag.text\n   344\t                                print(h1_text)\n   345\t                                printLog(\&quot;info\&quot;, \&quot;用户UID[%d%s] | %s\&quot;%(uid+1, username_string, h1_text))\n   346\t                                # encoding:utf-8\n   347\t                                if pushtoken != \&quot;\&quot; and h1_text== \&quot;签到成功\&quot;:\n   348\t                                    url = 'http://www.pushplus.plus/send?token=' + pushtoken + '&amp;title=' + \&quot;班级魔法自动签到任务\&quot; + '&amp;content=' + h1_text  # 不使用请注释\n   349\t                                    requests.get(url)  # 不使用请注释\n   350\t                                continue  # 返回到查找进行中的签到循环\n   351\t                            else:\n   352\t                                print(\&quot;未找到 &lt;h1&gt; 标签，可能存在错误\&quot;)\n   353\t                                printLog(\&quot;info\&quot;, \&quot;用户UID[%d%s] | 未找到 &lt;h1&gt; 标签，可能存在错误或签到成功\&quot;%(uid+1, username_string))\n   354\t                        else:\n   355\t                            print(\&quot;请求失败，状态码:\&quot;, response.status_code)\n   356\t                            printLog(\&quot;error\&quot;, \&quot;用户UID[%d%s] | 请求失败，状态码: %d\&quot;%(uid+1, username_string, response.status_code))\n   357\t                            print(\&quot;将本Cookie加入重试队列\&quot;)\n   358\t                            errorCookie.append(onlyCookie)\n   359\t                else:\n   360\t                    print(\&quot;未找到在进行的签到\&quot;)\n   361\t            else:\n   362\t                print(\&quot;登录状态异常，将本Cookie加入重试队列\&quot;)\n   363\t                printLog(\&quot;error\&quot;, \&quot;用户UID[%d%s] | 登录状态异常\&quot;%(uid+1, username_string))\n   364\t                errorCookie.append(onlyCookie)\n   365\t        else:\n   366\t            nullCookie += 1\n   367\t            print(\&quot;未找到匹配的字符串，检查Cookie是否错误！\&quot;)\n   368\t    return errorCookie, nullCookie\n   369\tdef job():\n   370\t    current_time = datetime.now()\n   371\t    print(\&quot;\\n进入检索，当前时间为:\&quot;, current_time)\n   372\t\n   373\t    errorCookie,nullCookie = qiandao(Cookies)\n   374\t    if len(errorCookie)&gt;0:\n   375\t        print(\&quot;检测到有Cookie签到失败，等待5分钟后启动一次重试队列\&quot;)\n   376\t        time.sleep(300)\n   377\t        errorCookie = qiandao(errorCookie)\n   378\t        if len(errorCookie)&gt;0:\n   379\t            print(\&quot;检测到仍然有Cookie签到失败，等待15分钟后最后启动一次重试队列\&quot;)\n   380\t            time.sleep(900)\n   381\t            errorCookie = qiandao(errorCookie)\n   382\t            if len(errorCookie)&gt;0:\n   383\t                print(\&quot;!!!  检测到仍然有Cookie签到失败，请检查Cookie是否过期或网络异常  !!!\&quot;)\n   384\t    elif nullCookie&gt;0:\n   385\t        print(\&quot;!!! 本次签到存在异常，请检查Cookie是否均已正常配置 !!!\&quot;)\n   386\t    else:\n   387\t        print(\&quot;★本次签到圆满成功★\&quot;)\n   388\t\n   389\t    print(\&quot;■ □ ■ □ ■ □ 我是分割线 □ ■ □ ■ □ ■\&quot;)\n   390\t\n   391\t    if scheduletime:\n   392\t        print(\&quot;☆本次签到结束，等待设定的时间%s到达☆\\n\&quot;%scheduletime)\n   393\t\n   394\tif (scheduletime != \&quot;\&quot;):\n   395\t    print(\&quot;☆等待设定时间\&quot; + scheduletime + \&quot;到达☆\&quot;)\n   396\t    # 设置定时任务，在每天的早上8点触发\n   397\t    schedule.every().day.at(scheduletime).do(job)\n   398\t    # 格式化时间\n   399\t    hour,minute = scheduletime.split(\&quot;:\&quot;)\n   400\t\n   401\t    while True:\n   402\t        schedule.run_pending()\n   403\t        thisTime(hour,minute) # 倒计时\n   404\telse:\n   405\t    job()\n   406\t    input(\&quot;手动签到已结束，敲击回车关闭窗口☆~\&quot;)\n...\nPath: README.md\n     1\t&lt;div align=\&quot;center\&quot;&gt;\n     2\t    &lt;h1&gt;AutoCheckBJMF 班级魔方自动签到&lt;/h1&gt;\n     3\t    &lt;img src=\&quot;https://img.shields.io/github/license/JasonYANG170/AutoCheckBJMF?label=License&amp;style=for-the-badge\&quot;&gt;\n     4\t    &lt;img src=\&quot;https://img.shields.io/github/commit-activity/w/JasonYANG170/AutoCheckBJMF?style=for-the-badge\&quot;&gt;\n     5\t&lt;img src=\&quot;https://img.shields.io/github/languages/count/JasonYANG170/AutoCheckBJMF?logo=python&amp;style=for-the-badge\&quot;&gt;\n     6\t\t&lt;br&gt;\n     7\t    \t&lt;a href=\&quot;https://discord.com/invite/az3ceRmgVe\&quot;&gt;&lt;img alt=\&quot;Discord\&quot; src=\&quot;https://img.shields.io/discord/978108215499816980?style=social&amp;logo=discord&amp;label=echosec\&quot;&gt;&lt;/a&gt;\n     8\t  &lt;br&gt;\n     9\t&lt;img src=\&quot;https://github.com/JasonYANG170/AutoCheckBJMF/assets/39414350/7400a5d2-1031-4e31-b189-4cbfa2df51e6\&quot;&gt;\n    10\t\t\n    11\t这是一项基于Python语言的班级魔方GPS自动签到Script\n    12\t\n    13\t&lt;br&gt;\n    14\t\n    15\t&lt;/div&gt;\n    16\t\n    17\t严禁将本程序用于违法用途，请遵守地区法规，另如有违背平台利益请与我联系撤销平台支持\n    18\t## 支持平台\n    19\t**Windows、Mac、Linux**\n    20\t## 支持的签到模式  \n    21\t- ✅ 二维码签到    （验证通过）\n    22\t- ✅ GPS签到      （验证通过）\n    23\t- ✅ GPS+拍照签到 （验证通过）\n    24\t-  密码签到      \n    25\t\n    26\t## 功能\n    27\t- ✅ 支持定时开启签到\n    28\t- ✅ 支持24小时无人值守\n    29\t- ✅ 支持msi安装包一键式安装\n    30\t- ✅ 支持自定义经纬度完成定位签到\n    31\t- ✅ 支持循环检测GPS及扫码签到任务\n    32\t- ✅ 支持自动导入data.json配置文件 \n    33\t- ✅ 支持自动保存信息到data.json文件\n    34\t- ✅ 支持连续签到，无需重复抓取Cookie值 \n    35\t\n    36\t\n    37\t如遇问题，请向我提出issues\n    38\t\n    39\t## 使用教程\n    40\t维基Wiki https://github.com/JasonYANG170/AutoCheckBJMF/wiki\n    41\t\n    42\t## 自行打包\n    43\t`pyinstaller main.spec`\n    44\t\n    45\t## 喜欢这个项目，请为我点个Star ⭐ \n    46\t\n    47\t[![Star History Chart](https://api.star-history.com/svg?repos=JasonYANG170/AutoCheckBJMF&amp;type=Date)](https://star-history.com/#star-history/star-history&amp;Date)\n...\nPath: .github/workflows/AutoCheckBJMF.yml\n     1\tname: AutoCheckBJMF\n     2\ton:\n     3\t  workflow_dispatch: \n     4\tenv: \n     5\t    ClassID: ${{ secrets.ClassID }}\n     6\t    X: ${{ secrets.X }}\n     7\t    Y: ${{ secrets.Y }}\n     8\t    ACC: ${{ secrets.ACC }}\n     9\t    SearchTime: ${{ secrets.SEARCHTIME }}\n    10\t    MyCookie: ${{ secrets.MYCOOKIE }}\n    11\t    token: ${{ secrets.TOKEN }}\n    12\tjobs:\n    13\t  checkin:\n    14\t    runs-on: ubuntu-latest\n    15\t    steps:\n    16\t      - name: Checkout repo\n    17\t        uses: actions/checkout@v3        \n    18\t      - name: Set up env\n    19\t        run: pip install requests\n    20\t             pip install beautifulsoup4\n    21\t       # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi \n    22\t      - name: Checkin\n    23\t        run: |\n    24\t          python main.py \n...\nPath: main.spec\n     1\t# -*- mode: python ; coding: utf-8 -*-\n     2\t\n     3\t\n     4\ta = Analysis(\n     5\t    ['main.py'],\n     6\t    pathex=[],\n     7\t    binaries=[],\n     8\t    datas=[],\n     9\t    hiddenimports=[],\n    10\t    hookspath=[],\n    11\t    hooksconfig={},\n    12\t    runtime_hooks=[],\n    13\t    excludes=[],\n    14\t    noarchive=False,\n    15\t    optimize=0,\n    16\t)\n    17\tpyz = PYZ(a.pure)\n    18\t\n    19\texe = EXE(\n    20\t    pyz,\n    21\t    a.scripts,\n    22\t    a.binaries,\n    23\t    a.datas,\n    24\t    [],\n    25\t    name='main',\n    26\t    debug=False,\n    27\t    bootloader_ignore_signals=False,\n    28\t    strip=False,\n    29\t    upx=True,\n    30\t    upx_exclude=[],\n    31\t    runtime_tmpdir=None,\n    32\t    console=True,\n    33\t    disable_windowed_traceback=False,\n    34\t    argv_emulation=False,\n    35\t    target_arch=None,\n    36\t    codesign_identity=None,\n    37\t    entitlements_file=None,\n    38\t)\n...\nPath: LICENSE\n...\n   122\t\n   123\t  The \&quot;System Libraries\&quot; of an executable work include anything, other\n   124\tthan the work as a whole, that (a) is included in the normal form of\n   125\tpackaging a Major Component, but which is not part of that Major\n   126\tComponent, and (b) serves only to enable use of the work with that\n   127\tMajor Component, or to implement a Standard Interface for which an\n   128\timplementation is available to the public in source code form.  A\n   129\t\&quot;Major Component\&quot;, in this context, means a major essential component\n   130\t(kernel, window system, and so on) of the specific operating system\n   131\t(if any) on which the executable work runs, or a compiler used to\n   132\tproduce the work, or an object code interpreter used to run it.\n...\n   336\t\n   337\t  Corresponding Source conveyed, and Installation Information provided,\n   338\tin accord with this section must be in a format that is publicly\n   339\tdocumented (and with an implementation available to the public in\n   340\tsource code form), and must require no special password or key for\n   341\tunpacking, reading or copying.\n   342\t\n   343\t  7. Additional Terms.\n   344\t\n   345\t  \&quot;Additional permissions\&quot; are terms that supplement the terms of this\n   346\tLicense by making exceptions from one or more of its conditions.\n   347\tAdditional permissions that are applicable to the entire Program shall\n   348\tbe treated as though they were included in this License, to the extent\n   349\tthat they are valid under applicable law.  If additional permissions\n   350\tapply only to part of the Program, that part may be used separately\n   351\tunder those permissions, but the entire Program remains governed by\n   352\tthis License without regard to the additional permissions.\n...\n   387\t\n   388\t  All other non-permissive additional terms are considered \&quot;further\n   389\trestrictions\&quot; within the meaning of section 10.  If the Program as you\n   390\treceived it, or any part of it, contains a notice stating that it is\n   391\tgoverned by this License along with a term that is a further\n   392\trestriction, you may remove that term.  If a license document contains\n   393\ta further restriction but permits relicensing or conveying under this\n   394\tLicense, you may add to a covered work material governed by the terms\n   395\tof that license document, provided that the further restriction does\n   396\tnot survive such relicensing or conveying.\n...\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_01HMQrc3gajARnGo7A7jtiNm&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;C:/Users/MSI-NB/PycharmProjects/AutoCheckBJMF&quot;,&quot;folderRoot&quot;:&quot;C:/Users/MSI-NB/PycharmProjects/AutoCheckBJMF&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-17T10:37:23.785Z&quot;,&quot;response_text&quot;:&quot;基于对代码库的详细分析，我现在为您提供全面的执行流程分析和Cookie获取机制改进方案：\n\n## 1. 代码执行流程分析\n\n### 主要执行流程\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;692986a7-b21f-4e3c-a8a2-33ff62316c31&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;{\&quot;type\&quot;:\&quot;mermaid_diagram\&quot;,\&quot;diagram_definition\&quot;:\&quot;flowchart TD\\n    A[程序启动] --&gt; B[检查config.json文件]\\n    B --&gt; C{文件是否存在?}\\n    C --&gt;|否| D[创建默认配置文件]\\n    C --&gt;|是| E[读取配置文件]\\n    D --&gt; F[首次配置流程]\\n    E --&gt; G{configLock状态?}\\n    G --&gt;|false| F\\n    G --&gt;|true| H[读取已有配置]\\n    \\n    F --&gt; I[输入班级ID]\\n    I --&gt; J[输入经纬度坐标]\\n    J --&gt; K[输入海拔]\\n    K --&gt; L[配置Cookie]\\n    L --&gt; M[配置定时任务]\\n    M --&gt; N[配置推送token]\\n    N --&gt; O[保存配置并锁定]\\n    \\n    H --&gt; P[显示配置信息]\\n    O --&gt; P\\n    P --&gt; Q{是否设置定时?}\\n    Q --&gt;|是| R[启动定时任务]\\n    Q --&gt;|否| S[立即执行签到]\\n    \\n    R --&gt; T[等待定时时间]\\n    T --&gt; U[执行job函数]\\n    S --&gt; U\\n    \\n    U --&gt; V[调用qiandao函数]\\n    V --&gt; W[遍历所有Cookie]\\n    W --&gt; X[提取用户备注]\\n    X --&gt; Y[发送签到页面请求]\\n    Y --&gt; Z{登录状态正常?}\\n    Z --&gt;|否| AA[加入重试队列]\\n    Z --&gt;|是| BB[解析签到任务]\\n    BB --&gt; CC[查找GPS/扫码签到]\\n    CC --&gt; DD{找到签到任务?}\\n    DD --&gt;|否| EE[无签到任务]\\n    DD --&gt;|是| FF[生成随机坐标偏移]\\n    FF --&gt; GG[发送签到请求]\\n    GG --&gt; HH[解析签到结果]\\n    HH --&gt; II{签到成功?}\\n    II --&gt;|是| JJ[推送通知]\\n    II --&gt;|否| AA\\n    \\n    AA --&gt; KK[重试机制]\\n    KK --&gt; LL[5分钟后重试]\\n    LL --&gt; MM[15分钟后最终重试]\\n    \\n    EE --&gt; NN[完成本轮签到]\\n    JJ --&gt; NN\\n    MM --&gt; NN\\n    NN --&gt; OO{定时模式?}\\n    OO --&gt;|是| T\\n    OO --&gt;|否| PP[程序结束]\&quot;,\&quot;title\&quot;:\&quot;AutoCheckBJMF 执行流程图\&quot;}&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_014zL6h6t2zj94QhLj7DW3Ni&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;C:/Users/MSI-NB/PycharmProjects/AutoCheckBJMF&quot;,&quot;folderRoot&quot;:&quot;C:/Users/MSI-NB/PycharmProjects/AutoCheckBJMF&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-17T10:37:40.157Z&quot;,&quot;response_text&quot;:&quot;### 关键组件分析\n\n**1. 配置管理模块**\n- 使用JSON文件存储配置信息\n- 支持首次配置和配置锁定机制\n- 配置项包括：班级ID、坐标、Cookie、定时设置等\n\n**2. Cookie处理模块**\n- 支持多用户Cookie管理\n- 使用正则表达式提取关键Cookie值\n- 支持用户备注格式：`username=&lt;备注&gt;;remember....&lt;魔方Cookie&gt;`\n\n**3. 签到核心模块**\n- GPS定位签到和二维码签到支持\n- 坐标随机偏移防检测\n- 多重重试机制\n\n**4. 定时任务模块**\n- 基于schedule库的定时执行\n- 支持倒计时显示\n\n## 2. Cookie获取机制改进方案\n\n### 当前Cookie机制的局限性\n\n````python path=main.py mode=EXCERPT\n# 当前Cookie获取方式 - 手动输入\nprint(\&quot;请输入你的Cookie，输入空行结束，支持用户备注格式如下\&quot;)\nprint(\&quot;username=&lt;备注&gt;;remember....&lt;魔方Cookie&gt;\&quot;)\nwhile True:\n    cookie = input(\&quot;Cookie: \&quot;)\n    if not cookie:\n        break\n    Cookies.append(cookie)\n````\n\n**主要问题：**\n1. 完全依赖用户手动抓包获取\n2. Cookie过期后需要重新手动获取\n3. 用户体验差，技术门槛高\n4. 无自动刷新机制\n\n### 改进方案设计\n\n现在我来创建一个完整的Cookie自动化获取和管理系统：&quot;,&quot;workspace_file_chunks&quot;:[]}],&quot;feedbackStates&quot;:{&quot;temp-fe-18d1686e-a63b-4552-abdf-7c192ff7f2dd&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-eeaa17ae-4a68-4a91-9f6a-f799fe06d066&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-fa0987b3-4762-4d89-968b-d3642c4f71e1&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-f1978084-5ab8-4780-8168-ce44f9e56bc1&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-b0954412-b409-4830-997c-ebfcefb33203&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-b1b60404-bf86-4302-b413-b5fa24e4c70d&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;}},&quot;toolUseStates&quot;:{&quot;3dba4484-433f-4db4-9dfb-cb0fc0b617b4;toolu_vrtx_01KgFd5PCU43G2vyUKPQRfar&quot;:{&quot;requestId&quot;:&quot;3dba4484-433f-4db4-9dfb-cb0fc0b617b4&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_01KgFd5PCU43G2vyUKPQRfar&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in ., excluding hidden items:\n./LICENSE\n./README.md\n./main.py\n./main.spec\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;af5f2108-8196-4333-9085-89bcdede7edd;toolu_vrtx_014cmGfr6iaidfQdLE1zCkL4&quot;:{&quot;requestId&quot;:&quot;af5f2108-8196-4333-9085-89bcdede7edd&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_014cmGfr6iaidfQdLE1zCkL4&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on main.py:\n     1\timport random\n     2\timport requests\n     3\timport re\n     4\timport time\n     5\timport os\n     6\tfrom bs4 import BeautifulSoup\n     7\timport json\n     8\timport schedule\n     9\tfrom datetime import datetime\n    10\timport logging\n    11\t\n    12\t# 获取当前目录\n    13\tcurrent_directory = os.getcwd()\n    14\tfile_name = \&quot;config.json\&quot;\n    15\tfile_path = os.path.join(current_directory, file_name)\n    16\t\n    17\tprint(\&quot;----------提醒----------\&quot;)\n    18\tprint(\&quot;项目地址：https://github.com/JasonYANG170/AutoCheckBJMF\&quot;)\n    19\tprint(\&quot;请查看教程以获取Cookie和班级ID\&quot;)\n    20\tprint(\&quot;config.json文件位置：\&quot;, current_directory)\n    21\t\n    22\t# 检查文件是否存在\n    23\tif not os.path.exists(file_path):\n    24\t    # 定义默认的 JSON 数据\n    25\t    default_config = {\n    26\t        \&quot;class\&quot;: \&quot;\&quot;, # 班级ID\n    27\t        \&quot;lat\&quot;: \&quot;\&quot;, # 纬度\n    28\t        \&quot;lng\&quot;: \&quot;\&quot;, # 经度\n    29\t        \&quot;acc\&quot;: \&quot;\&quot;, # 海拔\n    30\t        \&quot;time\&quot;: 0, # 等待时间（已弃用）\n    31\t        \&quot;cookie\&quot;: \&quot;\&quot;, # 用户令牌\n    32\t        \&quot;scheduletime\&quot;: \&quot;\&quot;, # 定时任务\n    33\t        \&quot;pushplus\&quot;: \&quot;\&quot;, # pushpush推送令牌\n    34\t        \&quot;debug\&quot;: False, # 调试模式\n    35\t        \&quot;configLock\&quot;: False #配置编辑状态，\n    36\t    }\n    37\t    # 文件不存在，创建并写入默认数据\n    38\t    with open(file_path, \&quot;w\&quot;) as file:\n    39\t        json.dump(default_config, file, indent=4)\n    40\t    print(\&quot;----------初始化----------\&quot;)\n    41\t    print(f\&quot;文件 {file_name} 不存在，已创建并填充默认数据。\&quot;)\n    42\t\n    43\t# 读取外部 JSON 文件中的数据\n    44\twith open(file_path, 'r') as file:\n    45\t    json_data = json.load(file)\n    46\t    debug = json_data[\&quot;debug\&quot;]\n    47\t\n    48\t    # 判断是否首次使用或解除配置锁定\n    49\t    if not json_data['configLock']:\n    50\t        print(\&quot;----------基础配置(必填)----------\&quot;)\n    51\t        print(\&quot;☆请通过查看教程抓包获取班级ID\&quot;)\n    52\t        ClassID = input(\&quot;请输入班级ID：\&quot;)\n    53\t        print(\&quot;☆输入的经纬度格式为x.x，请输入至少8位小数用于定位微偏移，不满8位用0替补！\&quot;)\n    54\t        print(\&quot;☆腾讯坐标拾取工具：https://lbs.qq.com/getPoint/\&quot;)\n    55\t        X = input(\&quot;请输入纬度(X)：\&quot;)\n    56\t        Y = input(\&quot;请输入经度(Y)：\&quot;)\n    57\t        ACC = input(\&quot;请输入海拔：\&quot;)\n    58\t        print(\&quot;----------配置Cookie(必填)----------\&quot;)\n    59\t        print(\&quot;请通过查看教程抓包获取Cookie\&quot;)\n    60\t        print(\&quot;教程：https://github.com/JasonYANG170/AutoCheckBJMF/wiki/\&quot;)\n    61\t        print(\&quot;登录获取：https://k8n.cn/student/login\&quot;)\n    62\t        print(\&quot;Tip:90%的失败由Cookie变更导致\&quot;)\n    63\t        Cookies = []\n    64\t        print(\&quot;请输入你的Cookie，输入空行结束，支持用户备注格式如下\&quot;)\n    65\t        print(\&quot;username=&lt;备注&gt;;remember....&lt;魔方Cookie&gt;\&quot;)\n    66\t        while True:\n    67\t            cookie = input(\&quot;Cookie: \&quot;)\n    68\t            if not cookie:\n    69\t                break\n    70\t            Cookies.append(cookie)\n    71\t        print(\&quot;----------配置定时任务(可选)----------\&quot;)\n    72\t        print(\&quot;格式为00:00,例如1:30要填写为01:30!不设置定时请留空\&quot;)\n    73\t        print(\&quot;Tip：请注意以上格式并使用英文符号“:”不要使用中文符号“：”\&quot;)\n    74\t        scheduletime = input(\&quot;请输入签到时间：\&quot;)\n    75\t        if scheduletime==\&quot;\&quot;:\n    76\t            print(\&quot;您未填写签到时间，未启用定时签到，启动即开始签到\&quot;)\n    77\t        print(\&quot;----------远程推送----------\&quot;)\n    78\t        pushtoken = input(\&quot;(未适配新版多人签到，如果是多人签到建议不使用)\\n请输入pushplus推送密钥，不需要请留空：\&quot;)\n    79\t\n    80\t        print(\&quot;配置完成，您的信息将写入json文件，下次使用将直接从json文件导入\&quot;)\n    81\t        # 2. 修改数据\n    82\t        json_data[\&quot;class\&quot;] = ClassID\n    83\t        json_data[\&quot;lat\&quot;] = X\n    84\t        json_data[\&quot;lng\&quot;] = Y\n    85\t        json_data[\&quot;acc\&quot;] = ACC\n    86\t        json_data[\&quot;cookie\&quot;] = Cookies\n    87\t        json_data[\&quot;scheduletime\&quot;] = scheduletime\n    88\t        json_data[\&quot;pushplus\&quot;] = pushtoken\n    89\t        json_data[\&quot;configLock\&quot;] = True\n    90\t        # 3. 写回JSON文件\n    91\t        with open(file_path, \&quot;w\&quot;) as file:\n    92\t            json.dump(json_data, file, indent=4) # indent 设置缩进为4个空格\n    93\t        print(\&quot;数据已保存到\&quot;+current_directory+\&quot;下的data.json中。\&quot;)\n    94\t    else:\n    95\t        print(\&quot;----------欢迎回来----------\&quot;)\n    96\t        ClassID = json_data[\&quot;class\&quot;]\n    97\t        X = json_data[\&quot;lat\&quot;]\n    98\t        Y = json_data[\&quot;lng\&quot;]\n    99\t        ACC = json_data[\&quot;acc\&quot;]\n   100\t        Cookies = json_data[\&quot;cookie\&quot;]\n   101\t        scheduletime = json_data[\&quot;scheduletime\&quot;]\n   102\t        pushtoken = json_data[\&quot;pushplus\&quot;]\n   103\t        print(\&quot;配置已读取\&quot;)\n   104\t        if scheduletime==\&quot;\&quot;:\n   105\t            print(\&quot;当前签到模式为：手动，即将开始签到\&quot;)\n   106\t        else:\n   107\t            print(\&quot;当前签到模式为：自动，启动定时任务\&quot;)\n   108\t    print(\&quot;----------信息----------\&quot;)\n   109\t    print(\&quot;班级ID:\&quot; + ClassID)\n   110\t    print(\&quot;纬度:\&quot; + X)\n   111\t    print(\&quot;经度:\&quot; + Y)\n   112\t    print(\&quot;海拔:\&quot; + ACC)\n   113\t    # print(\&quot;检索间隔:\&quot; + str(SearchTime))\n   114\t    print(\&quot;Cookie数量:\&quot; + str(len(Cookies)))\n   115\t    print(\&quot;定时:\&quot; + scheduletime)\n   116\t    print(\&quot;通知token:\&quot; + pushtoken)\n   117\t    if debug:print(\&quot;Debug:\&quot; + str(debug))\n   118\t    print(\&quot;---------------------\&quot;)\n   119\t\n   120\tdef printLog(type, message):\n   121\t    if debug:\n   122\t        if type == \&quot;info\&quot;:\n   123\t            logger.info(message)\n   124\t        elif type == \&quot;warning\&quot;:\n   125\t            logger.warning(message)\n   126\t        elif type == \&quot;error\&quot;:\n   127\t            logger.error(message)\n   128\t        elif type == \&quot;critical\&quot;:\n   129\t            logger.critical(message)\n   130\t        else:\n   131\t            logger.info(message)\n   132\t\n   133\tif debug:\n   134\t    # 创建 logger\n   135\t    logger = logging.getLogger()\n   136\t    logger.setLevel(logging.INFO)\n   137\t    # 创建文件处理器并设置编码为 UTF-8\n   138\t    file_handler = logging.FileHandler('AutoCheckBJMF.log', encoding='utf-8')\n   139\t    formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')\n   140\t    file_handler.setFormatter(formatter)\n   141\t    # 将处理器添加到 logger\n   142\t    logger.addHandler(file_handler)\n   143\t    printLog(\&quot;info\&quot;, \&quot;已启动Debug\&quot;)\n   144\tprint(\&quot;★一切就绪，程序开始执行\\\\^o^/\&quot;)\n   145\t\n   146\t### 请注意，下述两个自动任务功能未适配\n   147\t# GitHub Actions自动任务\n   148\t# ClassID = os.environ['ClassID']\n   149\t# X = os.environ['X']\n   150\t# Y = os.environ['Y']\n   151\t# ACC = os.environ['ACC']\n   152\t# SearchTime = os.environ['SearchTime']\n   153\t# Cookies = os.environ['Cookies']\n   154\t# token = os.environ['token']\n   155\t#scheduletime = os.environ['scheduletime']\n   156\t\n   157\t# 本地面板运行\n   158\t#ClassID = ''\n   159\t#X = ''\n   160\t#Y = ''\n   161\t#ACC = ''\n   162\t#SearchTime = 60\n   163\t#Cookies = ''\n   164\t#token = ''  #在pushplus网站中可以找到\n   165\t#scheduletime =''\n   166\t### 请注意，上述两个自动任务功能未适配\n   167\t\n   168\t# 随机经纬，用于多人签到定位偏移\n   169\tdef modify_decimal_part(num):\n   170\t    num = float(num)\n   171\t    # print(num)\n   172\t    # 将浮点数转换为字符串\n   173\t    num_str = f\&quot;{num:.8f}\&quot;  # 确保有足够的小数位数\n   174\t    # 找到小数点的位置\n   175\t    decimal_index = num_str.find('.')\n   176\t    # 提取小数点后4到6位\n   177\t    decimal_part = num_str[decimal_index + 4:decimal_index + 9]\n   178\t    # 将提取的小数部分转换为整数\n   179\t    decimal_value = int(decimal_part)\n   180\t    # 生成一个在-150到150范围的随机整数\n   181\t    random_offset = random.randint(-15000, 15000)\n   182\t    # 计算新的小数部分\n   183\t    new_decimal_value = decimal_value + random_offset\n   184\t    # 将新的小数部分转换为字符串，并确保它有3位\n   185\t    new_decimal_str = f\&quot;{new_decimal_value:05d}\&quot;\n   186\t    # 拼接回原浮点数\n   187\t    new_num_str = num_str[:decimal_index + 4] + new_decimal_str + num_str[decimal_index + 9:]\n   188\t    # 将新的字符串转换回浮点数\n   189\t    new_num = float(new_num_str)\n   190\t\n   191\t    return new_num\n   192\t\n   193\tdef thisTime(hour,minute):\n   194\t    # 指定的小时和分钟，这里示例为21:50，你可以按需修改\n   195\t    target_hour,target_minute = hour,minute\n   196\t\n   197\t    # while True:\n   198\t    # 获取当前时间的时间戳\n   199\t    current_time_stamp = time.time()\n   200\t    # 获取当前时间的结构体\n   201\t    current_time_struct = time.localtime(current_time_stamp)\n   202\t\n   203\t    # 获取当天的日期部分，构造一个新的时间结构体，用于设置指定时间\n   204\t    today_date = time.strftime(\&quot;%Y-%m-%d\&quot;, current_time_struct)\n   205\t    target_time_struct = time.strptime(today_date + \&quot; \&quot; + str(target_hour) + \&quot;:\&quot; + str(target_minute) + \&quot;:00\&quot;, \&quot;%Y-%m-%d %H:%M:%S\&quot;)\n   206\t    target_time_stamp = time.mktime(target_time_struct)\n   207\t\n   208\t    if target_time_stamp &lt; current_time_stamp:\n   209\t        # 如果目标时间已经小于当前时间，说明今天的时间已经过了，那就设置为明天的同样时间\n   210\t        target_time_stamp += 24 * 3600\n   211\t\n   212\t    # 计算时间差（单位为秒）\n   213\t    remaining_seconds_main = int(target_time_stamp - current_time_stamp)\n   214\t    # 计算剩余小时数\n   215\t    remaining_hours = remaining_seconds_main // 3600\n   216\t    remaining_seconds = remaining_seconds_main % 3600\n   217\t    # 计算剩余分钟数\n   218\t    remaining_minutes = remaining_seconds // 60\n   219\t    remaining_seconds %= 60\n   220\t\n   221\t    # 格式化当前时间结构体为字符串\n   222\t    current_time = time.strftime(\&quot;%Y-%m-%d %H:%M\&quot;, current_time_struct)\n   223\t\n   224\t    # 区分剩余时间的显示逻辑，以优化终端内容的显示阅读体验\n   225\t    if remaining_seconds_main &lt; 300:\n   226\t        # 如果剩余时间小于5分钟则每秒刷新\n   227\t        print(\&quot;\\r当前时间：{}，距离下次任务执行{}:{} 还剩{}分钟{}秒\\t\\t\&quot;.format(\n   228\t            current_time, target_hour, target_minute, remaining_minutes, remaining_seconds), end=\&quot;\&quot;)\n   229\t        time.sleep(1)\n   230\t    else:\n   231\t        # 如果剩余时间大于5分钟则每分钟刷新\n   232\t        print(\&quot;\\r当前时间：{}，距离下次任务执行{}:{} 还剩{}小时{}分钟\\t\\t\&quot;.format(\n   233\t            current_time, target_hour, target_minute, remaining_hours, remaining_minutes), end=\&quot;\&quot;)\n   234\t        time.sleep(60)\n   235\t\n   236\tdef qiandao(theCookies):\n   237\t    # title = '班级魔法自动签到任务'  # 改成你要的标题内容\n   238\t    url = 'http://k8n.cn/student/course/' + ClassID + '/punchs'\n   239\t    errorCookie = []\n   240\t    nullCookie = 0\n   241\t    # 多用户检测签到\n   242\t    for uid in range(0,len(theCookies)):\n   243\t        onlyCookie = theCookies[uid]\n   244\t\n   245\t        # 使用正则表达式提取目标字符串 - 用户备注\n   246\t        pattern = r'username=[^;]+'\n   247\t        result = re.search(pattern, onlyCookie)\n   248\t\n   249\t        if result:\n   250\t            username_string = \&quot; &lt;%s&gt;\&quot;%result.group(0).split(\&quot;=\&quot;)[1]\n   251\t        else:\n   252\t            username_string = \&quot;\&quot;\n   253\t\n   254\t        # 用户信息显示与5秒冷却\n   255\t        print(\&quot;☆☆☆☆☆ 用户UID：%d%s 即将签到 ☆☆☆☆☆\&quot;%(uid+1,username_string),end=\&quot;\&quot;)\n   256\t        time.sleep(1) #暂停5秒后进行签到\n   257\t        print(\&quot;\\r★☆☆☆☆ 用户UID：%d%s 即将签到 ☆☆☆☆★\&quot;%(uid+1,username_string),end=\&quot;\&quot;)\n   258\t        time.sleep(1)\n   259\t        print(\&quot;\\r★★☆☆☆ 用户UID：%d%s 即将签到 ☆☆☆★★\&quot;%(uid+1,username_string),end=\&quot;\&quot;)\n   260\t        time.sleep(1)\n   261\t        print(\&quot;\\r★★★☆☆ 用户UID：%d%s 即将签到 ☆☆★★★\&quot;%(uid+1,username_string),end=\&quot;\&quot;)\n   262\t        time.sleep(1)\n   263\t        print(\&quot;\\r★★★★☆ 用户UID：%d%s 即将签到 ☆★★★★\&quot;%(uid+1,username_string),end=\&quot;\&quot;)\n   264\t        time.sleep(1)\n   265\t        print(\&quot;\\r★★★★★ 用户UID：%d%s 开始签到 ★★★★★\&quot;%(uid+1,username_string))\n   266\t\n   267\t        # 使用正则表达式提取目标字符串 - Cookie\n   268\t        pattern = r'remember_student_59ba36addc2b2f9401580f014c7f58ea4e30989d=[^;]+'\n   269\t        result = re.search(pattern, onlyCookie)\n   270\t\n   271\t        if result:\n   272\t            extracted_string = result.group(0)\n   273\t            if debug:\n   274\t                print(extracted_string)\n   275\t            headers = {\n   276\t                'User-Agent': 'Mozilla/5.0 (Linux; Android 9; AKT-AK47 Build/USER-AK47; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/116.0.0.0 Mobile Safari/537.36 XWEB/1160065 MMWEBSDK/20231202 MMWEBID/1136 MicroMessenger/8.0.47.2560(0x28002F35) WeChat/arm64 Weixin NetType/4G Language/zh_CN ABI/arm64',\n   277\t                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/wxpic,image/tpg,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n   278\t                'X-Requested-With': 'com.tencent.mm',\n   279\t                'Referer': 'http://k8n.cn/student/course/' + ClassID,\n   280\t                'Accept-Encoding': 'gzip, deflate',\n   281\t                'Accept-Language': 'zh-CN,zh-SG;q=0.9,zh;q=0.8,en-SG;q=0.7,en-US;q=0.6,en;q=0.5',\n   282\t                'Cookie': extracted_string\n   283\t            }\n   284\t\n   285\t            response = requests.get(url, headers=headers)\n   286\t            print(\&quot;响应:\&quot;, response)\n   287\t\n   288\t            # 创建 Beautiful Soup 对象解析 HTML\n   289\t            soup = BeautifulSoup(response.text, 'html.parser')\n   290\t\n   291\t            title_tag = soup.find('title')\n   292\t\n   293\t            if debug:\n   294\t                print(\&quot;★☆★\&quot;)\n   295\t                print(soup)\n   296\t                print(\&quot;===\&quot;)\n   297\t                print(title_tag)\n   298\t                print(\&quot;★☆★\&quot;)\n   299\t\n   300\t            if title_tag and \&quot;出错\&quot; not in title_tag.text:\n   301\t                # 使用正则表达式从 HTML 文本中提取所有 punch_gps() 中的数字\n   302\t                pattern = re.compile(r'punch_gps\\((\\d+)\\)')\n   303\t                matches = pattern.findall(response.text)\n   304\t                print(\&quot;找到GPS定位签到:\&quot;, matches)\n   305\t                pattern2 = re.compile(r'punchcard_(\\d+)')\n   306\t                matches2 = pattern2.findall(response.text)\n   307\t                print(\&quot;找到扫码签到:\&quot;, matches2)\n   308\t                matches.extend(matches2)\n   309\t                if matches:\n   310\t                    for match in matches:\n   311\t                        url1 = \&quot;http://k8n.cn/student/punchs/course/\&quot; + ClassID + \&quot;/\&quot; + match\n   312\t                        newX = modify_decimal_part(X)\n   313\t                        newY = modify_decimal_part(Y)\n   314\t                        payload = {\n   315\t                            'id': match,\n   316\t                            'lat': newX,\n   317\t                            'lng': newY,\n   318\t                            'acc': ACC,  #未知，可能是高度\n   319\t                            'res': '',  #拍照签到\n   320\t                            'gps_addr': ''  #未知，抓取时该函数为空\n   321\t                        }\n   322\t\n   323\t                        response = requests.post(url1, headers=headers, data=payload)\n   324\t                        print(\&quot;签到请求已发送： 签到ID[%s] 签到定位[%s,%s] 签到海拔[%s]\&quot;%(match, newX, newY, ACC))\n   325\t                        printLog(\&quot;info\&quot;, \&quot;用户UID[%d%s] | 签到请求已发送： 签到ID[%s] 签到定位[%s,%s] 签到海拔[%s]\&quot;%(uid+1, username_string, match, newX, newY, ACC))\n   326\t\n   327\t                        if response.status_code == 200:\n   328\t                            print(\&quot;请求成功，响应:\&quot;, response)\n   329\t\n   330\t                            # 解析响应的 HTML 内容\n   331\t                            soup_response = BeautifulSoup(response.text, 'html.parser')\n   332\t                            # h1_tag = soup_response.find('h1')\n   333\t                            div_tag = soup_response.find('div', id='title')\n   334\t\n   335\t                            if debug:\n   336\t                                print(\&quot;★☆★\&quot;)\n   337\t                                print(soup_response)\n   338\t                                print(\&quot;===\&quot;)\n   339\t                                print(div_tag)\n   340\t                                print(\&quot;★☆★\&quot;)\n   341\t\n   342\t                            if div_tag:\n   343\t                                h1_text = div_tag.text\n   344\t                                print(h1_text)\n   345\t                                printLog(\&quot;info\&quot;, \&quot;用户UID[%d%s] | %s\&quot;%(uid+1, username_string, h1_text))\n   346\t                                # encoding:utf-8\n   347\t                                if pushtoken != \&quot;\&quot; and h1_text== \&quot;签到成功\&quot;:\n   348\t                                    url = 'http://www.pushplus.plus/send?token=' + pushtoken + '&amp;title=' + \&quot;班级魔法自动签到任务\&quot; + '&amp;content=' + h1_text  # 不使用请注释\n   349\t                                    requests.get(url)  # 不使用请注释\n   350\t                                continue  # 返回到查找进行中的签到循环\n   351\t                            else:\n   352\t                                print(\&quot;未找到 &lt;h1&gt; 标签，可能存在错误\&quot;)\n   353\t                                printLog(\&quot;info\&quot;, \&quot;用户UID[%d%s] | 未找到 &lt;h1&gt; 标签，可能存在错误或签到成功\&quot;%(uid+1, username_string))\n   354\t                        else:\n   355\t                            print(\&quot;请求失败，状态码:\&quot;, response.status_code)\n   356\t                            printLog(\&quot;error\&quot;, \&quot;用户UID[%d%s] | 请求失败，状态码: %d\&quot;%(uid+1, username_string, response.status_code))\n   357\t                            print(\&quot;将本Cookie加入重试队列\&quot;)\n   358\t                            errorCookie.append(onlyCookie)\n   359\t                else:\n   360\t                    print(\&quot;未找到在进行的签到\&quot;)\n   361\t            else:\n   362\t                print(\&quot;登录状态异常，将本Cookie加入重试队列\&quot;)\n   363\t                printLog(\&quot;error\&quot;, \&quot;用户UID[%d%s] | 登录状态异常\&quot;%(uid+1, username_string))\n   364\t                errorCookie.append(onlyCookie)\n   365\t        else:\n   366\t            nullCookie += 1\n   367\t            print(\&quot;未找到匹配的字符串，检查Cookie是否错误！\&quot;)\n   368\t    return errorCookie, nullCookie\n   369\tdef job():\n   370\t    current_time = datetime.now()\n   371\t    print(\&quot;\\n进入检索，当前时间为:\&quot;, current_time)\n   372\t\n   373\t    errorCookie,nullCookie = qiandao(Cookies)\n   374\t    if len(errorCookie)&gt;0:\n   375\t        print(\&quot;检测到有Cookie签到失败，等待5分钟后启动一次重试队列\&quot;)\n   376\t        time.sleep(300)\n   377\t        errorCookie = qiandao(errorCookie)\n   378\t        if len(errorCookie)&gt;0:\n   379\t            print(\&quot;检测到仍然有Cookie签到失败，等待15分钟后最后启动一次重试队列\&quot;)\n   380\t            time.sleep(900)\n   381\t            errorCookie = qiandao(errorCookie)\n   382\t            if len(errorCookie)&gt;0:\n   383\t                print(\&quot;!!!  检测到仍然有Cookie签到失败，请检查Cookie是否过期或网络异常  !!!\&quot;)\n   384\t    elif nullCookie&gt;0:\n   385\t        print(\&quot;!!! 本次签到存在异常，请检查Cookie是否均已正常配置 !!!\&quot;)\n   386\t    else:\n   387\t        print(\&quot;★本次签到圆满成功★\&quot;)\n   388\t\n   389\t    print(\&quot;■ □ ■ □ ■ □ 我是分割线 □ ■ □ ■ □ ■\&quot;)\n   390\t\n   391\t    if scheduletime:\n   392\t        print(\&quot;☆本次签到结束，等待设定的时间%s到达☆\\n\&quot;%scheduletime)\n   393\t\n   394\tif (scheduletime != \&quot;\&quot;):\n   395\t    print(\&quot;☆等待设定时间\&quot; + scheduletime + \&quot;到达☆\&quot;)\n   396\t    # 设置定时任务，在每天的早上8点触发\n   397\t    schedule.every().day.at(scheduletime).do(job)\n   398\t    # 格式化时间\n   399\t    hour,minute = scheduletime.split(\&quot;:\&quot;)\n   400\t\n   401\t    while True:\n   402\t        schedule.run_pending()\n   403\t        thisTime(hour,minute) # 倒计时\n   404\telse:\n   405\t    job()\n   406\t    input(\&quot;手动签到已结束，敲击回车关闭窗口☆~\&quot;)\n   407\t\nTotal lines in file: 407\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;be573a09-2519-44a4-8751-c93ab6149e9b;toolu_vrtx_01SHXrnG75xqtdRqxrCjczYJ&quot;:{&quot;requestId&quot;:&quot;be573a09-2519-44a4-8751-c93ab6149e9b&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_01SHXrnG75xqtdRqxrCjczYJ&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on README.md:\n     1\t&lt;div align=\&quot;center\&quot;&gt;\n     2\t    &lt;h1&gt;AutoCheckBJMF 班级魔方自动签到&lt;/h1&gt;\n     3\t    &lt;img src=\&quot;https://img.shields.io/github/license/JasonYANG170/AutoCheckBJMF?label=License&amp;style=for-the-badge\&quot;&gt;\n     4\t    &lt;img src=\&quot;https://img.shields.io/github/commit-activity/w/JasonYANG170/AutoCheckBJMF?style=for-the-badge\&quot;&gt;\n     5\t&lt;img src=\&quot;https://img.shields.io/github/languages/count/JasonYANG170/AutoCheckBJMF?logo=python&amp;style=for-the-badge\&quot;&gt;\n     6\t\t&lt;br&gt;\n     7\t    \t&lt;a href=\&quot;https://discord.com/invite/az3ceRmgVe\&quot;&gt;&lt;img alt=\&quot;Discord\&quot; src=\&quot;https://img.shields.io/discord/978108215499816980?style=social&amp;logo=discord&amp;label=echosec\&quot;&gt;&lt;/a&gt;\n     8\t  &lt;br&gt;\n     9\t&lt;img src=\&quot;https://github.com/JasonYANG170/AutoCheckBJMF/assets/39414350/7400a5d2-1031-4e31-b189-4cbfa2df51e6\&quot;&gt;\n    10\t\t\n    11\t这是一项基于Python语言的班级魔方GPS自动签到Script\n    12\t\n    13\t&lt;br&gt;\n    14\t\n    15\t&lt;/div&gt;\n    16\t\n    17\t严禁将本程序用于违法用途，请遵守地区法规，另如有违背平台利益请与我联系撤销平台支持\n    18\t## 支持平台\n    19\t**Windows、Mac、Linux**\n    20\t## 支持的签到模式  \n    21\t- ✅ 二维码签到    （验证通过）\n    22\t- ✅ GPS签到      （验证通过）\n    23\t- ✅ GPS+拍照签到 （验证通过）\n    24\t-  密码签到      \n    25\t\n    26\t## 功能\n    27\t- ✅ 支持定时开启签到\n    28\t- ✅ 支持24小时无人值守\n    29\t- ✅ 支持msi安装包一键式安装\n    30\t- ✅ 支持自定义经纬度完成定位签到\n    31\t- ✅ 支持循环检测GPS及扫码签到任务\n    32\t- ✅ 支持自动导入data.json配置文件 \n    33\t- ✅ 支持自动保存信息到data.json文件\n    34\t- ✅ 支持连续签到，无需重复抓取Cookie值 \n    35\t\n    36\t\n    37\t如遇问题，请向我提出issues\n    38\t\n    39\t## 使用教程\n    40\t维基Wiki https://github.com/JasonYANG170/AutoCheckBJMF/wiki\n    41\t\n    42\t## 自行打包\n    43\t`pyinstaller main.spec`\n    44\t\n    45\t## 喜欢这个项目，请为我点个Star ⭐ \n    46\t\n    47\t[![Star History Chart](https://api.star-history.com/svg?repos=JasonYANG170/AutoCheckBJMF&amp;type=Date)](https://star-history.com/#star-history/star-history&amp;Date)\n    48\t\nTotal lines in file: 48\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;27fbd82a-e3e5-4fd5-8c18-9076599c309f;toolu_vrtx_01HMQrc3gajARnGo7A7jtiNm&quot;:{&quot;requestId&quot;:&quot;27fbd82a-e3e5-4fd5-8c18-9076599c309f&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_01HMQrc3gajARnGo7A7jtiNm&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;The following code sections were retrieved:\nPath: main.py\n     1\timport random\n     2\timport requests\n     3\timport re\n     4\timport time\n     5\timport os\n     6\tfrom bs4 import BeautifulSoup\n     7\timport json\n     8\timport schedule\n     9\tfrom datetime import datetime\n    10\timport logging\n    11\t\n    12\t# 获取当前目录\n    13\tcurrent_directory = os.getcwd()\n    14\tfile_name = \&quot;config.json\&quot;\n    15\tfile_path = os.path.join(current_directory, file_name)\n    16\t\n    17\tprint(\&quot;----------提醒----------\&quot;)\n    18\tprint(\&quot;项目地址：https://github.com/JasonYANG170/AutoCheckBJMF\&quot;)\n    19\tprint(\&quot;请查看教程以获取Cookie和班级ID\&quot;)\n    20\tprint(\&quot;config.json文件位置：\&quot;, current_directory)\n    21\t\n    22\t# 检查文件是否存在\n    23\tif not os.path.exists(file_path):\n    24\t    # 定义默认的 JSON 数据\n    25\t    default_config = {\n    26\t        \&quot;class\&quot;: \&quot;\&quot;, # 班级ID\n    27\t        \&quot;lat\&quot;: \&quot;\&quot;, # 纬度\n    28\t        \&quot;lng\&quot;: \&quot;\&quot;, # 经度\n    29\t        \&quot;acc\&quot;: \&quot;\&quot;, # 海拔\n    30\t        \&quot;time\&quot;: 0, # 等待时间（已弃用）\n    31\t        \&quot;cookie\&quot;: \&quot;\&quot;, # 用户令牌\n    32\t        \&quot;scheduletime\&quot;: \&quot;\&quot;, # 定时任务\n    33\t        \&quot;pushplus\&quot;: \&quot;\&quot;, # pushpush推送令牌\n    34\t        \&quot;debug\&quot;: False, # 调试模式\n    35\t        \&quot;configLock\&quot;: False #配置编辑状态，\n    36\t    }\n    37\t    # 文件不存在，创建并写入默认数据\n    38\t    with open(file_path, \&quot;w\&quot;) as file:\n    39\t        json.dump(default_config, file, indent=4)\n    40\t    print(\&quot;----------初始化----------\&quot;)\n    41\t    print(f\&quot;文件 {file_name} 不存在，已创建并填充默认数据。\&quot;)\n    42\t\n    43\t# 读取外部 JSON 文件中的数据\n    44\twith open(file_path, 'r') as file:\n    45\t    json_data = json.load(file)\n    46\t    debug = json_data[\&quot;debug\&quot;]\n    47\t\n    48\t    # 判断是否首次使用或解除配置锁定\n    49\t    if not json_data['configLock']:\n    50\t        print(\&quot;----------基础配置(必填)----------\&quot;)\n    51\t        print(\&quot;☆请通过查看教程抓包获取班级ID\&quot;)\n    52\t        ClassID = input(\&quot;请输入班级ID：\&quot;)\n    53\t        print(\&quot;☆输入的经纬度格式为x.x，请输入至少8位小数用于定位微偏移，不满8位用0替补！\&quot;)\n    54\t        print(\&quot;☆腾讯坐标拾取工具：https://lbs.qq.com/getPoint/\&quot;)\n    55\t        X = input(\&quot;请输入纬度(X)：\&quot;)\n    56\t        Y = input(\&quot;请输入经度(Y)：\&quot;)\n    57\t        ACC = input(\&quot;请输入海拔：\&quot;)\n    58\t        print(\&quot;----------配置Cookie(必填)----------\&quot;)\n    59\t        print(\&quot;请通过查看教程抓包获取Cookie\&quot;)\n    60\t        print(\&quot;教程：https://github.com/JasonYANG170/AutoCheckBJMF/wiki/\&quot;)\n    61\t        print(\&quot;登录获取：https://k8n.cn/student/login\&quot;)\n    62\t        print(\&quot;Tip:90%的失败由Cookie变更导致\&quot;)\n    63\t        Cookies = []\n    64\t        print(\&quot;请输入你的Cookie，输入空行结束，支持用户备注格式如下\&quot;)\n    65\t        print(\&quot;username=&lt;备注&gt;;remember....&lt;魔方Cookie&gt;\&quot;)\n    66\t        while True:\n    67\t            cookie = input(\&quot;Cookie: \&quot;)\n    68\t            if not cookie:\n    69\t                break\n    70\t            Cookies.append(cookie)\n    71\t        print(\&quot;----------配置定时任务(可选)----------\&quot;)\n    72\t        print(\&quot;格式为00:00,例如1:30要填写为01:30!不设置定时请留空\&quot;)\n    73\t        print(\&quot;Tip：请注意以上格式并使用英文符号“:”不要使用中文符号“：”\&quot;)\n    74\t        scheduletime = input(\&quot;请输入签到时间：\&quot;)\n    75\t        if scheduletime==\&quot;\&quot;:\n    76\t            print(\&quot;您未填写签到时间，未启用定时签到，启动即开始签到\&quot;)\n    77\t        print(\&quot;----------远程推送----------\&quot;)\n    78\t        pushtoken = input(\&quot;(未适配新版多人签到，如果是多人签到建议不使用)\\n请输入pushplus推送密钥，不需要请留空：\&quot;)\n    79\t\n    80\t        print(\&quot;配置完成，您的信息将写入json文件，下次使用将直接从json文件导入\&quot;)\n    81\t        # 2. 修改数据\n    82\t        json_data[\&quot;class\&quot;] = ClassID\n    83\t        json_data[\&quot;lat\&quot;] = X\n    84\t        json_data[\&quot;lng\&quot;] = Y\n    85\t        json_data[\&quot;acc\&quot;] = ACC\n    86\t        json_data[\&quot;cookie\&quot;] = Cookies\n    87\t        json_data[\&quot;scheduletime\&quot;] = scheduletime\n    88\t        json_data[\&quot;pushplus\&quot;] = pushtoken\n    89\t        json_data[\&quot;configLock\&quot;] = True\n    90\t        # 3. 写回JSON文件\n    91\t        with open(file_path, \&quot;w\&quot;) as file:\n    92\t            json.dump(json_data, file, indent=4) # indent 设置缩进为4个空格\n    93\t        print(\&quot;数据已保存到\&quot;+current_directory+\&quot;下的data.json中。\&quot;)\n    94\t    else:\n    95\t        print(\&quot;----------欢迎回来----------\&quot;)\n    96\t        ClassID = json_data[\&quot;class\&quot;]\n    97\t        X = json_data[\&quot;lat\&quot;]\n    98\t        Y = json_data[\&quot;lng\&quot;]\n    99\t        ACC = json_data[\&quot;acc\&quot;]\n   100\t        Cookies = json_data[\&quot;cookie\&quot;]\n   101\t        scheduletime = json_data[\&quot;scheduletime\&quot;]\n   102\t        pushtoken = json_data[\&quot;pushplus\&quot;]\n   103\t        print(\&quot;配置已读取\&quot;)\n   104\t        if scheduletime==\&quot;\&quot;:\n   105\t            print(\&quot;当前签到模式为：手动，即将开始签到\&quot;)\n   106\t        else:\n   107\t            print(\&quot;当前签到模式为：自动，启动定时任务\&quot;)\n   108\t    print(\&quot;----------信息----------\&quot;)\n   109\t    print(\&quot;班级ID:\&quot; + ClassID)\n   110\t    print(\&quot;纬度:\&quot; + X)\n   111\t    print(\&quot;经度:\&quot; + Y)\n   112\t    print(\&quot;海拔:\&quot; + ACC)\n   113\t    # print(\&quot;检索间隔:\&quot; + str(SearchTime))\n   114\t    print(\&quot;Cookie数量:\&quot; + str(len(Cookies)))\n   115\t    print(\&quot;定时:\&quot; + scheduletime)\n   116\t    print(\&quot;通知token:\&quot; + pushtoken)\n   117\t    if debug:print(\&quot;Debug:\&quot; + str(debug))\n   118\t    print(\&quot;---------------------\&quot;)\n   119\t\n   120\tdef printLog(type, message):\n   121\t    if debug:\n   122\t        if type == \&quot;info\&quot;:\n   123\t            logger.info(message)\n   124\t        elif type == \&quot;warning\&quot;:\n   125\t            logger.warning(message)\n   126\t        elif type == \&quot;error\&quot;:\n   127\t            logger.error(message)\n   128\t        elif type == \&quot;critical\&quot;:\n   129\t            logger.critical(message)\n   130\t        else:\n   131\t            logger.info(message)\n   132\t\n   133\tif debug:\n   134\t    # 创建 logger\n   135\t    logger = logging.getLogger()\n   136\t    logger.setLevel(logging.INFO)\n   137\t    # 创建文件处理器并设置编码为 UTF-8\n   138\t    file_handler = logging.FileHandler('AutoCheckBJMF.log', encoding='utf-8')\n   139\t    formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')\n   140\t    file_handler.setFormatter(formatter)\n   141\t    # 将处理器添加到 logger\n   142\t    logger.addHandler(file_handler)\n   143\t    printLog(\&quot;info\&quot;, \&quot;已启动Debug\&quot;)\n   144\tprint(\&quot;★一切就绪，程序开始执行\\\\^o^/\&quot;)\n   145\t\n   146\t### 请注意，下述两个自动任务功能未适配\n   147\t# GitHub Actions自动任务\n   148\t# ClassID = os.environ['ClassID']\n   149\t# X = os.environ['X']\n   150\t# Y = os.environ['Y']\n   151\t# ACC = os.environ['ACC']\n   152\t# SearchTime = os.environ['SearchTime']\n   153\t# Cookies = os.environ['Cookies']\n   154\t# token = os.environ['token']\n   155\t#scheduletime = os.environ['scheduletime']\n   156\t\n   157\t# 本地面板运行\n   158\t#ClassID = ''\n   159\t#X = ''\n   160\t#Y = ''\n   161\t#ACC = ''\n   162\t#SearchTime = 60\n   163\t#Cookies = ''\n   164\t#token = ''  #在pushplus网站中可以找到\n   165\t#scheduletime =''\n   166\t### 请注意，上述两个自动任务功能未适配\n   167\t\n   168\t# 随机经纬，用于多人签到定位偏移\n   169\tdef modify_decimal_part(num):\n   170\t    num = float(num)\n   171\t    # print(num)\n   172\t    # 将浮点数转换为字符串\n   173\t    num_str = f\&quot;{num:.8f}\&quot;  # 确保有足够的小数位数\n   174\t    # 找到小数点的位置\n   175\t    decimal_index = num_str.find('.')\n   176\t    # 提取小数点后4到6位\n   177\t    decimal_part = num_str[decimal_index + 4:decimal_index + 9]\n   178\t    # 将提取的小数部分转换为整数\n   179\t    decimal_value = int(decimal_part)\n   180\t    # 生成一个在-150到150范围的随机整数\n   181\t    random_offset = random.randint(-15000, 15000)\n   182\t    # 计算新的小数部分\n   183\t    new_decimal_value = decimal_value + random_offset\n   184\t    # 将新的小数部分转换为字符串，并确保它有3位\n   185\t    new_decimal_str = f\&quot;{new_decimal_value:05d}\&quot;\n   186\t    # 拼接回原浮点数\n   187\t    new_num_str = num_str[:decimal_index + 4] + new_decimal_str + num_str[decimal_index + 9:]\n   188\t    # 将新的字符串转换回浮点数\n   189\t    new_num = float(new_num_str)\n   190\t\n   191\t    return new_num\n   192\t\n   193\tdef thisTime(hour,minute):\n   194\t    # 指定的小时和分钟，这里示例为21:50，你可以按需修改\n   195\t    target_hour,target_minute = hour,minute\n   196\t\n   197\t    # while True:\n   198\t    # 获取当前时间的时间戳\n   199\t    current_time_stamp = time.time()\n   200\t    # 获取当前时间的结构体\n   201\t    current_time_struct = time.localtime(current_time_stamp)\n   202\t\n   203\t    # 获取当天的日期部分，构造一个新的时间结构体，用于设置指定时间\n   204\t    today_date = time.strftime(\&quot;%Y-%m-%d\&quot;, current_time_struct)\n   205\t    target_time_struct = time.strptime(today_date + \&quot; \&quot; + str(target_hour) + \&quot;:\&quot; + str(target_minute) + \&quot;:00\&quot;, \&quot;%Y-%m-%d %H:%M:%S\&quot;)\n   206\t    target_time_stamp = time.mktime(target_time_struct)\n   207\t\n   208\t    if target_time_stamp &lt; current_time_stamp:\n   209\t        # 如果目标时间已经小于当前时间，说明今天的时间已经过了，那就设置为明天的同样时间\n   210\t        target_time_stamp += 24 * 3600\n...\n   235\t\n   236\tdef qiandao(theCookies):\n   237\t    # title = '班级魔法自动签到任务'  # 改成你要的标题内容\n   238\t    url = 'http://k8n.cn/student/course/' + ClassID + '/punchs'\n   239\t    errorCookie = []\n   240\t    nullCookie = 0\n   241\t    # 多用户检测签到\n   242\t    for uid in range(0,len(theCookies)):\n   243\t        onlyCookie = theCookies[uid]\n   244\t\n   245\t        # 使用正则表达式提取目标字符串 - 用户备注\n   246\t        pattern = r'username=[^;]+'\n   247\t        result = re.search(pattern, onlyCookie)\n   248\t\n   249\t        if result:\n   250\t            username_string = \&quot; &lt;%s&gt;\&quot;%result.group(0).split(\&quot;=\&quot;)[1]\n   251\t        else:\n   252\t            username_string = \&quot;\&quot;\n...\n   281\t                'Accept-Language': 'zh-CN,zh-SG;q=0.9,zh;q=0.8,en-SG;q=0.7,en-US;q=0.6,en;q=0.5',\n   282\t                'Cookie': extracted_string\n   283\t            }\n   284\t\n   285\t            response = requests.get(url, headers=headers)\n   286\t            print(\&quot;响应:\&quot;, response)\n   287\t\n   288\t            # 创建 Beautiful Soup 对象解析 HTML\n   289\t            soup = BeautifulSoup(response.text, 'html.parser')\n   290\t\n   291\t            title_tag = soup.find('title')\n   292\t\n   293\t            if debug:\n   294\t                print(\&quot;★☆★\&quot;)\n   295\t                print(soup)\n   296\t                print(\&quot;===\&quot;)\n   297\t                print(title_tag)\n   298\t                print(\&quot;★☆★\&quot;)\n   299\t\n   300\t            if title_tag and \&quot;出错\&quot; not in title_tag.text:\n   301\t                # 使用正则表达式从 HTML 文本中提取所有 punch_gps() 中的数字\n   302\t                pattern = re.compile(r'punch_gps\\((\\d+)\\)')\n   303\t                matches = pattern.findall(response.text)\n   304\t                print(\&quot;找到GPS定位签到:\&quot;, matches)\n   305\t                pattern2 = re.compile(r'punchcard_(\\d+)')\n   306\t                matches2 = pattern2.findall(response.text)\n   307\t                print(\&quot;找到扫码签到:\&quot;, matches2)\n   308\t                matches.extend(matches2)\n   309\t                if matches:\n   310\t                    for match in matches:\n   311\t                        url1 = \&quot;http://k8n.cn/student/punchs/course/\&quot; + ClassID + \&quot;/\&quot; + match\n   312\t                        newX = modify_decimal_part(X)\n   313\t                        newY = modify_decimal_part(Y)\n   314\t                        payload = {\n   315\t                            'id': match,\n   316\t                            'lat': newX,\n   317\t                            'lng': newY,\n   318\t                            'acc': ACC,  #未知，可能是高度\n   319\t                            'res': '',  #拍照签到\n   320\t                            'gps_addr': ''  #未知，抓取时该函数为空\n   321\t                        }\n...\n   341\t\n   342\t                            if div_tag:\n   343\t                                h1_text = div_tag.text\n   344\t                                print(h1_text)\n   345\t                                printLog(\&quot;info\&quot;, \&quot;用户UID[%d%s] | %s\&quot;%(uid+1, username_string, h1_text))\n   346\t                                # encoding:utf-8\n   347\t                                if pushtoken != \&quot;\&quot; and h1_text== \&quot;签到成功\&quot;:\n   348\t                                    url = 'http://www.pushplus.plus/send?token=' + pushtoken + '&amp;title=' + \&quot;班级魔法自动签到任务\&quot; + '&amp;content=' + h1_text  # 不使用请注释\n   349\t                                    requests.get(url)  # 不使用请注释\n   350\t                                continue  # 返回到查找进行中的签到循环\n   351\t                            else:\n   352\t                                print(\&quot;未找到 &lt;h1&gt; 标签，可能存在错误\&quot;)\n   353\t                                printLog(\&quot;info\&quot;, \&quot;用户UID[%d%s] | 未找到 &lt;h1&gt; 标签，可能存在错误或签到成功\&quot;%(uid+1, username_string))\n   354\t                        else:\n   355\t                            print(\&quot;请求失败，状态码:\&quot;, response.status_code)\n   356\t                            printLog(\&quot;error\&quot;, \&quot;用户UID[%d%s] | 请求失败，状态码: %d\&quot;%(uid+1, username_string, response.status_code))\n   357\t                            print(\&quot;将本Cookie加入重试队列\&quot;)\n   358\t                            errorCookie.append(onlyCookie)\n   359\t                else:\n   360\t                    print(\&quot;未找到在进行的签到\&quot;)\n   361\t            else:\n   362\t                print(\&quot;登录状态异常，将本Cookie加入重试队列\&quot;)\n   363\t                printLog(\&quot;error\&quot;, \&quot;用户UID[%d%s] | 登录状态异常\&quot;%(uid+1, username_string))\n   364\t                errorCookie.append(onlyCookie)\n   365\t        else:\n   366\t            nullCookie += 1\n   367\t            print(\&quot;未找到匹配的字符串，检查Cookie是否错误！\&quot;)\n   368\t    return errorCookie, nullCookie\n   369\tdef job():\n   370\t    current_time = datetime.now()\n   371\t    print(\&quot;\\n进入检索，当前时间为:\&quot;, current_time)\n   372\t\n   373\t    errorCookie,nullCookie = qiandao(Cookies)\n   374\t    if len(errorCookie)&gt;0:\n   375\t        print(\&quot;检测到有Cookie签到失败，等待5分钟后启动一次重试队列\&quot;)\n   376\t        time.sleep(300)\n   377\t        errorCookie = qiandao(errorCookie)\n   378\t        if len(errorCookie)&gt;0:\n   379\t            print(\&quot;检测到仍然有Cookie签到失败，等待15分钟后最后启动一次重试队列\&quot;)\n   380\t            time.sleep(900)\n   381\t            errorCookie = qiandao(errorCookie)\n   382\t            if len(errorCookie)&gt;0:\n   383\t                print(\&quot;!!!  检测到仍然有Cookie签到失败，请检查Cookie是否过期或网络异常  !!!\&quot;)\n   384\t    elif nullCookie&gt;0:\n   385\t        print(\&quot;!!! 本次签到存在异常，请检查Cookie是否均已正常配置 !!!\&quot;)\n   386\t    else:\n   387\t        print(\&quot;★本次签到圆满成功★\&quot;)\n   388\t\n   389\t    print(\&quot;■ □ ■ □ ■ □ 我是分割线 □ ■ □ ■ □ ■\&quot;)\n   390\t\n   391\t    if scheduletime:\n   392\t        print(\&quot;☆本次签到结束，等待设定的时间%s到达☆\\n\&quot;%scheduletime)\n   393\t\n   394\tif (scheduletime != \&quot;\&quot;):\n   395\t    print(\&quot;☆等待设定时间\&quot; + scheduletime + \&quot;到达☆\&quot;)\n   396\t    # 设置定时任务，在每天的早上8点触发\n   397\t    schedule.every().day.at(scheduletime).do(job)\n   398\t    # 格式化时间\n   399\t    hour,minute = scheduletime.split(\&quot;:\&quot;)\n   400\t\n   401\t    while True:\n   402\t        schedule.run_pending()\n   403\t        thisTime(hour,minute) # 倒计时\n   404\telse:\n   405\t    job()\n   406\t    input(\&quot;手动签到已结束，敲击回车关闭窗口☆~\&quot;)\n...\nPath: README.md\n     1\t&lt;div align=\&quot;center\&quot;&gt;\n     2\t    &lt;h1&gt;AutoCheckBJMF 班级魔方自动签到&lt;/h1&gt;\n     3\t    &lt;img src=\&quot;https://img.shields.io/github/license/JasonYANG170/AutoCheckBJMF?label=License&amp;style=for-the-badge\&quot;&gt;\n     4\t    &lt;img src=\&quot;https://img.shields.io/github/commit-activity/w/JasonYANG170/AutoCheckBJMF?style=for-the-badge\&quot;&gt;\n     5\t&lt;img src=\&quot;https://img.shields.io/github/languages/count/JasonYANG170/AutoCheckBJMF?logo=python&amp;style=for-the-badge\&quot;&gt;\n     6\t\t&lt;br&gt;\n     7\t    \t&lt;a href=\&quot;https://discord.com/invite/az3ceRmgVe\&quot;&gt;&lt;img alt=\&quot;Discord\&quot; src=\&quot;https://img.shields.io/discord/978108215499816980?style=social&amp;logo=discord&amp;label=echosec\&quot;&gt;&lt;/a&gt;\n     8\t  &lt;br&gt;\n     9\t&lt;img src=\&quot;https://github.com/JasonYANG170/AutoCheckBJMF/assets/39414350/7400a5d2-1031-4e31-b189-4cbfa2df51e6\&quot;&gt;\n    10\t\t\n    11\t这是一项基于Python语言的班级魔方GPS自动签到Script\n    12\t\n    13\t&lt;br&gt;\n    14\t\n    15\t&lt;/div&gt;\n    16\t\n    17\t严禁将本程序用于违法用途，请遵守地区法规，另如有违背平台利益请与我联系撤销平台支持\n    18\t## 支持平台\n    19\t**Windows、Mac、Linux**\n    20\t## 支持的签到模式  \n    21\t- ✅ 二维码签到    （验证通过）\n    22\t- ✅ GPS签到      （验证通过）\n    23\t- ✅ GPS+拍照签到 （验证通过）\n    24\t-  密码签到      \n    25\t\n    26\t## 功能\n    27\t- ✅ 支持定时开启签到\n    28\t- ✅ 支持24小时无人值守\n    29\t- ✅ 支持msi安装包一键式安装\n    30\t- ✅ 支持自定义经纬度完成定位签到\n    31\t- ✅ 支持循环检测GPS及扫码签到任务\n    32\t- ✅ 支持自动导入data.json配置文件 \n    33\t- ✅ 支持自动保存信息到data.json文件\n    34\t- ✅ 支持连续签到，无需重复抓取Cookie值 \n    35\t\n    36\t\n    37\t如遇问题，请向我提出issues\n    38\t\n    39\t## 使用教程\n    40\t维基Wiki https://github.com/JasonYANG170/AutoCheckBJMF/wiki\n    41\t\n    42\t## 自行打包\n    43\t`pyinstaller main.spec`\n    44\t\n    45\t## 喜欢这个项目，请为我点个Star ⭐ \n    46\t\n    47\t[![Star History Chart](https://api.star-history.com/svg?repos=JasonYANG170/AutoCheckBJMF&amp;type=Date)](https://star-history.com/#star-history/star-history&amp;Date)\n...\nPath: .github/workflows/AutoCheckBJMF.yml\n     1\tname: AutoCheckBJMF\n     2\ton:\n     3\t  workflow_dispatch: \n     4\tenv: \n     5\t    ClassID: ${{ secrets.ClassID }}\n     6\t    X: ${{ secrets.X }}\n     7\t    Y: ${{ secrets.Y }}\n     8\t    ACC: ${{ secrets.ACC }}\n     9\t    SearchTime: ${{ secrets.SEARCHTIME }}\n    10\t    MyCookie: ${{ secrets.MYCOOKIE }}\n    11\t    token: ${{ secrets.TOKEN }}\n    12\tjobs:\n    13\t  checkin:\n    14\t    runs-on: ubuntu-latest\n    15\t    steps:\n    16\t      - name: Checkout repo\n    17\t        uses: actions/checkout@v3        \n    18\t      - name: Set up env\n    19\t        run: pip install requests\n    20\t             pip install beautifulsoup4\n    21\t       # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi \n    22\t      - name: Checkin\n    23\t        run: |\n    24\t          python main.py \n...\nPath: main.spec\n     1\t# -*- mode: python ; coding: utf-8 -*-\n     2\t\n     3\t\n     4\ta = Analysis(\n     5\t    ['main.py'],\n     6\t    pathex=[],\n     7\t    binaries=[],\n     8\t    datas=[],\n     9\t    hiddenimports=[],\n    10\t    hookspath=[],\n    11\t    hooksconfig={},\n    12\t    runtime_hooks=[],\n    13\t    excludes=[],\n    14\t    noarchive=False,\n    15\t    optimize=0,\n    16\t)\n    17\tpyz = PYZ(a.pure)\n    18\t\n    19\texe = EXE(\n    20\t    pyz,\n    21\t    a.scripts,\n    22\t    a.binaries,\n    23\t    a.datas,\n    24\t    [],\n    25\t    name='main',\n    26\t    debug=False,\n    27\t    bootloader_ignore_signals=False,\n    28\t    strip=False,\n    29\t    upx=True,\n    30\t    upx_exclude=[],\n    31\t    runtime_tmpdir=None,\n    32\t    console=True,\n    33\t    disable_windowed_traceback=False,\n    34\t    argv_emulation=False,\n    35\t    target_arch=None,\n    36\t    codesign_identity=None,\n    37\t    entitlements_file=None,\n    38\t)\n...\nPath: LICENSE\n...\n   122\t\n   123\t  The \&quot;System Libraries\&quot; of an executable work include anything, other\n   124\tthan the work as a whole, that (a) is included in the normal form of\n   125\tpackaging a Major Component, but which is not part of that Major\n   126\tComponent, and (b) serves only to enable use of the work with that\n   127\tMajor Component, or to implement a Standard Interface for which an\n   128\timplementation is available to the public in source code form.  A\n   129\t\&quot;Major Component\&quot;, in this context, means a major essential component\n   130\t(kernel, window system, and so on) of the specific operating system\n   131\t(if any) on which the executable work runs, or a compiler used to\n   132\tproduce the work, or an object code interpreter used to run it.\n...\n   336\t\n   337\t  Corresponding Source conveyed, and Installation Information provided,\n   338\tin accord with this section must be in a format that is publicly\n   339\tdocumented (and with an implementation available to the public in\n   340\tsource code form), and must require no special password or key for\n   341\tunpacking, reading or copying.\n   342\t\n   343\t  7. Additional Terms.\n   344\t\n   345\t  \&quot;Additional permissions\&quot; are terms that supplement the terms of this\n   346\tLicense by making exceptions from one or more of its conditions.\n   347\tAdditional permissions that are applicable to the entire Program shall\n   348\tbe treated as though they were included in this License, to the extent\n   349\tthat they are valid under applicable law.  If additional permissions\n   350\tapply only to part of the Program, that part may be used separately\n   351\tunder those permissions, but the entire Program remains governed by\n   352\tthis License without regard to the additional permissions.\n...\n   387\t\n   388\t  All other non-permissive additional terms are considered \&quot;further\n   389\trestrictions\&quot; within the meaning of section 10.  If the Program as you\n   390\treceived it, or any part of it, contains a notice stating that it is\n   391\tgoverned by this License along with a term that is a further\n   392\trestriction, you may remove that term.  If a license document contains\n   393\ta further restriction but permits relicensing or conveying under this\n   394\tLicense, you may add to a covered work material governed by the terms\n   395\tof that license document, provided that the further restriction does\n   396\tnot survive such relicensing or conveying.\n...\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;f526002f-4bfe-4938-be7d-59f6f2006c7e;toolu_vrtx_014zL6h6t2zj94QhLj7DW3Ni&quot;:{&quot;requestId&quot;:&quot;f526002f-4bfe-4938-be7d-59f6f2006c7e&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_014zL6h6t2zj94QhLj7DW3Ni&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;{\&quot;type\&quot;:\&quot;mermaid_diagram\&quot;,\&quot;diagram_definition\&quot;:\&quot;flowchart TD\\n    A[程序启动] --&gt; B[检查config.json文件]\\n    B --&gt; C{文件是否存在?}\\n    C --&gt;|否| D[创建默认配置文件]\\n    C --&gt;|是| E[读取配置文件]\\n    D --&gt; F[首次配置流程]\\n    E --&gt; G{configLock状态?}\\n    G --&gt;|false| F\\n    G --&gt;|true| H[读取已有配置]\\n    \\n    F --&gt; I[输入班级ID]\\n    I --&gt; J[输入经纬度坐标]\\n    J --&gt; K[输入海拔]\\n    K --&gt; L[配置Cookie]\\n    L --&gt; M[配置定时任务]\\n    M --&gt; N[配置推送token]\\n    N --&gt; O[保存配置并锁定]\\n    \\n    H --&gt; P[显示配置信息]\\n    O --&gt; P\\n    P --&gt; Q{是否设置定时?}\\n    Q --&gt;|是| R[启动定时任务]\\n    Q --&gt;|否| S[立即执行签到]\\n    \\n    R --&gt; T[等待定时时间]\\n    T --&gt; U[执行job函数]\\n    S --&gt; U\\n    \\n    U --&gt; V[调用qiandao函数]\\n    V --&gt; W[遍历所有Cookie]\\n    W --&gt; X[提取用户备注]\\n    X --&gt; Y[发送签到页面请求]\\n    Y --&gt; Z{登录状态正常?}\\n    Z --&gt;|否| AA[加入重试队列]\\n    Z --&gt;|是| BB[解析签到任务]\\n    BB --&gt; CC[查找GPS/扫码签到]\\n    CC --&gt; DD{找到签到任务?}\\n    DD --&gt;|否| EE[无签到任务]\\n    DD --&gt;|是| FF[生成随机坐标偏移]\\n    FF --&gt; GG[发送签到请求]\\n    GG --&gt; HH[解析签到结果]\\n    HH --&gt; II{签到成功?}\\n    II --&gt;|是| JJ[推送通知]\\n    II --&gt;|否| AA\\n    \\n    AA --&gt; KK[重试机制]\\n    KK --&gt; LL[5分钟后重试]\\n    LL --&gt; MM[15分钟后最终重试]\\n    \\n    EE --&gt; NN[完成本轮签到]\\n    JJ --&gt; NN\\n    MM --&gt; NN\\n    NN --&gt; OO{定时模式?}\\n    OO --&gt;|是| T\\n    OO --&gt;|否| PP[程序结束]\&quot;,\&quot;title\&quot;:\&quot;AutoCheckBJMF 执行流程图\&quot;}&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}}},&quot;draftExchange&quot;:{&quot;request_message&quot;:&quot;&quot;,&quot;rich_text_json_repr&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;}]},&quot;status&quot;:&quot;draft&quot;},&quot;requestIds&quot;:[],&quot;isPinned&quot;:false,&quot;isShareable&quot;:true,&quot;extraData&quot;:{&quot;isAgentConversation&quot;:true,&quot;hasDirtyEdits&quot;:false},&quot;personaType&quot;:0,&quot;rootTaskUuid&quot;:&quot;49e5b26c-a3a5-446e-b662-c411525a8500&quot;}},&quot;agentExecutionMode&quot;:&quot;manual&quot;,&quot;isPanelCollapsed&quot;:true,&quot;displayedAnnouncements&quot;:[]}" />
      </map>
    </option>
  </component>
</project>